apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
      checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
    creationTimestamp: "2025-05-23T13:08:15Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      controller-revision-hash: argocd-application-controller-5fdc7df5d5
      helm.sh/chart: argo-cd-8.0.9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: ec322d16-89b0-434c-a247-4ec431e7a17b
    resourceVersion: "660329"
    uid: e8bdaddb-a1f4-4b86-b3cb-7bd73164cc07
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - /usr/local/bin/argocd-application-controller
      - --metrics-port=8082
      env:
      - name: ARGOCD_CONTROLLER_REPLICAS
        value: "1"
      - name: ARGOCD_APPLICATION_CONTROLLER_NAME
        value: argocd-application-controller
      - name: ARGOCD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_HARD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.hard.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_RECONCILIATION_JITTER
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation.jitter
            name: argocd-cm
            optional: true
      - name: ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.error.grace.period.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS
        valueFrom:
          configMapKeyRef:
            key: controller.status.processors
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS
        valueFrom:
          configMapKeyRef:
            key: controller.operation.processors
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: controller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: controller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.metrics.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.factor
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.cap.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: controller.sync.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH
        valueFrom:
          configMapKeyRef:
            key: controller.resource.health.persist
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.app.state.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-username
            name: argocd-redis
            optional: true
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
            optional: false
      - name: REDIS_SENTINEL_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-username
            name: argocd-redis
            optional: true
      - name: REDIS_SENTINEL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-password
            name: argocd-redis
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CONTROLLER_SHARDING_ALGORITHM
        valueFrom:
          configMapKeyRef:
            key: controller.sharding.algorithm
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: controller.kubectl.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_MAX
        valueFrom:
          configMapKeyRef:
            key: controller.k8sclient.retry.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
        valueFrom:
          configMapKeyRef:
            key: controller.k8sclient.retry.base.backoff
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF
        valueFrom:
          configMapKeyRef:
            key: controller.diff.server.side
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: controller.ignore.normalizer.jq.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_HYDRATOR_ENABLED
        valueFrom:
          configMapKeyRef:
            key: hydrator.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING
        valueFrom:
          configMapKeyRef:
            key: controller.cluster.cache.batch.events.processing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL
        valueFrom:
          configMapKeyRef:
            key: controller.cluster.cache.events.processing.interval
            name: argocd-cmd-params-cm
            optional: true
      - name: KUBECACHEDIR
        value: /tmp/kubecache
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      name: application-controller
      ports:
      - containerPort: 8082
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /home/argocd
        name: argocd-home
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /tmp
        name: argocd-application-controller-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xv7g8
        readOnly: true
      workingDir: /home/argocd
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: argocd-home
    - emptyDir: {}
      name: argocd-application-controller-tmp
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - configMap:
        defaultMode: 420
        items:
        - key: controller.profile.enabled
          path: profiler.enabled
        name: argocd-cmd-params-cm
        optional: true
      name: argocd-cmd-params-cm
    - name: kube-api-access-xv7g8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://967fbfd94178934d8855501b16ea1062bae65017bd48ee31b43b2c5823c82f54
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState:
        terminated:
          containerID: containerd://b7dddd308df913bf776e69db21eaf9b5d63f2895f6c3c9006f3b2738251fd193
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:15Z"
      name: application-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
    creationTimestamp: "2025-05-23T13:08:14Z"
    generateName: argocd-applicationset-controller-5db49854f7-
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 5db49854f7
    name: argocd-applicationset-controller-5db49854f7-zlg5m
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-applicationset-controller-5db49854f7
      uid: 5205681e-552a-4134-a365-6e95d56282b7
    resourceVersion: "659984"
    uid: 661c6507-01ea-496c-a013-6ef50ce32012
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-applicationset-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - /usr/local/bin/argocd-applicationset-controller
      - --metrics-addr=:8080
      - --probe-addr=:8081
      - --webhook-addr=:7000
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.global.preserved.annotations
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.global.preserved.labels
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.leader.election
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.policy
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.policy.override
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.debug
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.dryrun
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_MODULES_ENABLED
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.git.submodule
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.progressive.syncs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.tokenref.strict.mode
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.new.git.file.globbing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.concurrent.reconciliations.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.scm.root.ca.path
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.allowed.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.webhook.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.requeue.after
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      name: applicationset-controller
      ports:
      - containerPort: 8080
        name: metrics
        protocol: TCP
      - containerPort: 8081
        name: probe
        protocol: TCP
      - containerPort: 7000
        name: webhook
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m2ppn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-applicationset-controller
    serviceAccountName: argocd-applicationset-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - emptyDir: {}
      name: tmp
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: kube-api-access-m2ppn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c888270ba5b5690c11b9fa38db45c259996afd35b667440d801a6d055a828d7
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState:
        terminated:
          containerID: containerd://b44b55c7347b1f9187c904678bad79846dad86ce4b5210a96dac8f47b8a73d98
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:17Z"
      name: applicationset-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
    creationTimestamp: "2025-05-23T13:08:14Z"
    generateName: argocd-dex-server-5b7b67d78c-
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 5b7b67d78c
    name: argocd-dex-server-5b7b67d78c-zns8f
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-5b7b67d78c
      uid: 7fdcb5f0-da33-4dbd-8000-b22d1f6274fa
    resourceVersion: "660208"
    uid: 01f8ac32-86a8-45c8-a331-38e830d41756
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-dex-server
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - rundex
      command:
      - /shared/argocd-dex
      env:
      - name: ARGOCD_DEX_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: dexserver.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEX_SERVER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: dexserver.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEX_SERVER_DISABLE_TLS
        valueFrom:
          configMapKeyRef:
            key: dexserver.disable.tls
            name: argocd-cmd-params-cm
            optional: true
      image: ghcr.io/dexidp/dex:v2.43.1
      imagePullPolicy: IfNotPresent
      name: dex-server
      ports:
      - containerPort: 5556
        name: http
        protocol: TCP
      - containerPort: 5557
        name: grpc
        protocol: TCP
      - containerPort: 5558
        name: metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /tls
        name: argocd-dex-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6vs5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      name: copyutil
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6vs5
        readOnly: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - emptyDir: {}
      name: dexconfig
    - name: argocd-dex-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-dex-server-tls
    - name: kube-api-access-z6vs5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f9f49d192e4524cecaed6aaa703976c1b8887354427b1cf450cbfb12a51af34b
      image: ghcr.io/dexidp/dex:v2.43.1
      imageID: ghcr.io/dexidp/dex@sha256:0881d3c9359b436d585b2061736ce271c100331e073be9178ef405ce5bf09557
      lastState:
        terminated:
          containerID: containerd://937c73ca2f73fc52ee67d54fc0c6712c1bf787b4f324e5277e251f713ba5045e
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:37Z"
      name: dex-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:51Z"
    hostIP: 172.20.0.2
    initContainerStatuses:
    - containerID: containerd://0038a4d0f618eedda2d33ab38037c0ddca3ed4af34f42310a73f4b7797783d2b
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 1
      state:
        terminated:
          containerID: containerd://0038a4d0f618eedda2d33ab38037c0ddca3ed4af34f42310a73f4b7797783d2b
          exitCode: 0
          finishedAt: "2025-05-24T15:29:51Z"
          reason: Completed
          startedAt: "2025-05-24T15:29:51Z"
    phase: Running
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:08:14Z"
    generateName: argocd-notifications-controller-76b95bf4c5-
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 76b95bf4c5
    name: argocd-notifications-controller-76b95bf4c5-qcvkx
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-notifications-controller-76b95bf4c5
      uid: 9b82f493-81c7-4eab-8877-5ec74e7b8723
    resourceVersion: "659959"
    uid: c627a22f-d703-4086-903f-416124b6e2d8
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-notifications-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - /usr/local/bin/argocd-notifications
      - --metrics-port=9001
      - --namespace=argocd
      - --argocd-repo-server=argocd-repo-server:8081
      - --secret-name=argocd-notifications-secret
      env:
      - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.selfservice.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      name: notifications-controller
      ports:
      - containerPort: 9001
        name: metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks699
        readOnly: true
      workingDir: /app
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-notifications-controller
    serviceAccountName: argocd-notifications-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: kube-api-access-ks699
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fef9a9ce1741cf76b6cd4aebeb7045a0266a9a1cf9393f14c49b14bf4625571f
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState:
        terminated:
          containerID: containerd://cc6007b08fc444e847ae3cd6b68478e0d4f17a0ab2921a4cb9cb9216e15c452f
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:15Z"
      name: notifications-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:08:14Z"
    generateName: argocd-redis-58596c6f96-
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 58596c6f96
    name: argocd-redis-58596c6f96-b4hfc
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-58596c6f96
      uid: 4ad90a75-ea6e-4d67-bed3-4539598aa051
    resourceVersion: "660299"
    uid: a229d83d-9b5c-4885-9b80-4b0e18e809fa
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      - --requirepass $(REDIS_PASSWORD)
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
      image: public.ecr.aws/docker/library/redis:7.2.8-alpine
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /health
        name: health
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svn54
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: argocd-redis-health-configmap
      name: health
    - name: kube-api-access-svn54
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bf97edec9a108c6fb6f821e829ccafdb7425a1dd1e9a18d67b912047af558a49
      image: public.ecr.aws/docker/library/redis:7.2.8-alpine
      imageID: public.ecr.aws/docker/library/redis@sha256:c88ea2979a49ca497bbf7d39241b237f86c98e58cb2f6b1bc2dd167621f819bb
      lastState:
        terminated:
          containerID: containerd://c2216f2eebd2cb8eae94472f7b3ae586cbea447b2d6e8abfc4e91a4386753c82
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:24Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:51Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.26
    podIPs:
    - ip: 10.244.0.26
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
      checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
    creationTimestamp: "2025-05-23T13:08:15Z"
    generateName: argocd-repo-server-bb6856cb7-
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: bb6856cb7
    name: argocd-repo-server-bb6856cb7-kvhvk
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-bb6856cb7
      uid: b16414a3-afbb-4fc5-932d-c2e94b226531
    resourceVersion: "660305"
    uid: fe6741e6-b5a6-4176-a8a2-09a27269ba56
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - /usr/local/bin/argocd-repo-server
      - --port=8081
      - --metrics-port=8084
      env:
      - name: ARGOCD_REPO_SERVER_NAME
        value: argocd-repo-server
      - name: ARGOCD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: reposerver.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: reposerver.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: reposerver.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: reposerver.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: reposerver.metrics.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_DISABLE_TLS
        valueFrom:
          configMapKeyRef:
            key: reposerver.disable.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MIN_VERSION
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.minversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MAX_VERSION
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.maxversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_CIPHERS
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.ciphers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: reposerver.repo.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-username
            name: argocd-redis
            optional: true
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
            optional: false
      - name: REDIS_SENTINEL_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-username
            name: argocd-redis
            optional: true
      - name: REDIS_SENTINEL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-password
            name: argocd-redis
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: reposerver.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.max.combined.directory.manifests.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
        valueFrom:
          configMapKeyRef:
            key: reposerver.plugin.tar.exclusions
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
        valueFrom:
          configMapKeyRef:
            key: reposerver.plugin.use.manifest.generate.paths
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
        valueFrom:
          configMapKeyRef:
            key: reposerver.allow.oob.symlinks
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.streamed.manifest.max.tar.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.streamed.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.helm.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.disable.helm.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_MODULES_ENABLED
        valueFrom:
          configMapKeyRef:
            key: reposerver.enable.git.submodule
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: reposerver.git.lsremote.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_REQUEST_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: reposerver.git.request.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: reposerver.revision.cache.lock.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
        valueFrom:
          configMapKeyRef:
            key: reposerver.include.hidden.directories
            name: argocd-cmd-params-cm
            optional: true
      - name: HELM_CACHE_HOME
        value: /helm-working-dir
      - name: HELM_CONFIG_HOME
        value: /helm-working-dir
      - name: HELM_DATA_HOME
        value: /helm-working-dir
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: repo-server
      ports:
      - containerPort: 8081
        name: repo-server
        protocol: TCP
      - containerPort: 8084
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /helm-working-dir
        name: helm-working-dir
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k872q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/cp
      - -n
      - /usr/local/bin/argocd
      - /var/run/argocd/argocd-cmp-server
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      name: copyutil
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k872q
        readOnly: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-repo-server
    serviceAccountName: argocd-repo-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: helm-working-dir
    - emptyDir: {}
      name: plugins
    - emptyDir: {}
      name: var-files
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: kube-api-access-k872q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6c61cb975f3473af47f8ccd839c36b0b414f86d67b89cf4675126c380d30681b
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState:
        terminated:
          containerID: containerd://52a0e0311bfd2b0506c8f4155bb81b2ccaceb2c23be694cbe9d7da93443f5907
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:18Z"
      name: repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:51Z"
    hostIP: 172.20.0.2
    initContainerStatuses:
    - containerID: containerd://24743abb9970de96238ec81a02c3c0dedf6b52eabacda2c3dd4153181fc60282
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 1
      state:
        terminated:
          containerID: containerd://24743abb9970de96238ec81a02c3c0dedf6b52eabacda2c3dd4153181fc60282
          exitCode: 0
          finishedAt: "2025-05-24T15:29:49Z"
          reason: Completed
          startedAt: "2025-05-24T15:29:49Z"
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
      checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
    creationTimestamp: "2025-05-23T13:08:14Z"
    generateName: argocd-server-b448677b5-
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: b448677b5
    name: argocd-server-b448677b5-qdxbk
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-b448677b5
      uid: 869cdbd7-6548-400f-b103-f5f6a5740abc
    resourceVersion: "660205"
    uid: d42218f4-d6bf-4bee-b6b0-e2822d50a990
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - /usr/local/bin/argocd-server
      - --port=8080
      - --metrics-port=8083
      env:
      - name: ARGOCD_SERVER_NAME
        value: argocd-server
      - name: ARGOCD_SERVER_INSECURE
        valueFrom:
          configMapKeyRef:
            key: server.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_BASEHREF
        valueFrom:
          configMapKeyRef:
            key: server.basehref
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ROOTPATH
        valueFrom:
          configMapKeyRef:
            key: server.rootpath
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: server.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOG_LEVEL
        valueFrom:
          configMapKeyRef:
            key: server.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER
        valueFrom:
          configMapKeyRef:
            key: server.dex.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DISABLE_AUTH
        valueFrom:
          configMapKeyRef:
            key: server.disable.auth
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ENABLE_GZIP
        valueFrom:
          configMapKeyRef:
            key: server.enable.gzip
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_X_FRAME_OPTIONS
        valueFrom:
          configMapKeyRef:
            key: server.x.frame.options
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
        valueFrom:
          configMapKeyRef:
            key: server.content.security.policy
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: server.dex.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: server.dex.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MIN_VERSION
        valueFrom:
          configMapKeyRef:
            key: server.tls.minversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MAX_VERSION
        valueFrom:
          configMapKeyRef:
            key: server.tls.maxversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_CIPHERS
        valueFrom:
          configMapKeyRef:
            key: server.tls.ciphers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.connection.status.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.oidc.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.login.attempts.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_STATIC_ASSETS
        valueFrom:
          configMapKeyRef:
            key: server.staticassets
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.app.state.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-username
            name: argocd-redis
            optional: true
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
            optional: false
      - name: REDIS_SENTINEL_USERNAME
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-username
            name: argocd-redis
            optional: true
      - name: REDIS_SENTINEL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: redis-sentinel-password
            name: argocd-redis
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_MAX_COOKIE_NUMBER
        valueFrom:
          configMapKeyRef:
            key: server.http.cookie.maxnumber
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: server.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: server.metrics.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
        valueFrom:
          configMapKeyRef:
            key: server.enable.proxy.extension
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_MAX
        valueFrom:
          configMapKeyRef:
            key: server.k8sclient.retry.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
        valueFrom:
          configMapKeyRef:
            key: server.k8sclient.retry.base.backoff
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_API_CONTENT_TYPES
        valueFrom:
          configMapKeyRef:
            key: server.api.content.types
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: server.webhook.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.new.git.file.globbing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.scm.root.ca.path
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.allowed.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_HYDRATOR_ENABLED
        valueFrom:
          configMapKeyRef:
            key: hydrator.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
        valueFrom:
          configMapKeyRef:
            key: server.sync.replace.allowed
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: server
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        name: server
        protocol: TCP
      - containerPort: 8083
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: server
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /app/config/dex/tls
        name: argocd-dex-server-tls
      - mountPath: /home/argocd
        name: plugins-home
      - mountPath: /shared/app/custom
        name: styles
      - mountPath: /tmp
        name: tmp
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gl2zs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: plugins-home
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-styles-cm
        optional: true
      name: styles
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-dex-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-dex-server-tls
    - configMap:
        defaultMode: 420
        items:
        - key: server.profile.enabled
          path: profiler.enabled
        name: argocd-cmd-params-cm
        optional: true
      name: argocd-cmd-params-cm
    - name: kube-api-access-gl2zs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://021ac11da09defc2b575b91eb4385cd172d9ef567d89625803dff8e08308b1d9
      image: quay.io/argoproj/argocd:v3.0.3
      imageID: quay.io/argoproj/argocd@sha256:95b5cf7ba6fe9b3a336de3209748475350d4fbc918c3ce508eb4cb2aa7ac2d1e
      lastState:
        terminated:
          containerID: containerd://e6b9d73ccf841f583cadbe5448460f9e24d6661617e3c9668431920cd4456f03
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:08:17Z"
      name: server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: BestEffort
    startTime: "2025-05-23T13:08:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-startup: f875cea0a33f040d43f2834887e6a2fd3661e284623b699c10262fa2d1148bcf
      checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    creationTimestamp: "2025-05-23T13:08:18Z"
    generateName: keycloak-
    labels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
      controller-revision-hash: keycloak-67f7c7dd6b
      statefulset.kubernetes.io/pod-name: keycloak-0
    name: keycloak-0
    namespace: auth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak
      uid: c0bb5b3f-fcf3-49aa-a365-79694a73afd9
    resourceVersion: "660352"
    uid: fbb1fdd8-398a-4b5f-833e-4540d1d66416
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloak
            topologyKey: failure-domain.beta.kubernetes.io/zone
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: NotIn
              values:
              - test
            matchLabels:
              app.kubernetes.io/instance: keycloak
              app.kubernetes.io/name: keycloak
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: DB_VENDOR
        value: postgres
      - name: DB_ADDR
        value: keycloak-postgresql
      - name: DB_PORT
        value: "5432"
      - name: DB_DATABASE
        value: keycloak
      - name: DB_USER
        value: keycloak
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgresql-password
            name: keycloak-postgresql
      image: quay.io/keycloak/keycloak:17.0.1-legacy
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /auth/
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: keycloak
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8443
        name: https
        protocol: TCP
      - containerPort: 9990
        name: http-management
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /auth/realms/master
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      startupProbe:
        failureThreshold: 60
        httpGet:
          path: /auth/
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/jboss/startup-scripts/keycloak.cli
        name: startup
        readOnly: true
        subPath: keycloak.cli
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4mdbt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-0
    initContainers:
    - command:
      - sh
      - -c
      - |
        echo 'Waiting for PostgreSQL to become ready...'

        until printf "." && nc -z -w 2 keycloak-postgresql 5432; do
            sleep 2;
        done;

        echo 'PostgreSQL OK ✓'
      image: docker.io/busybox:1.32
      imagePullPolicy: IfNotPresent
      name: pgchecker
      resources:
        limits:
          cpu: 20m
          memory: 32Mi
        requests:
          cpu: 20m
          memory: 32Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4mdbt
        readOnly: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
    serviceAccount: keycloak
    serviceAccountName: keycloak
    subdomain: keycloak-headless
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 365
        items:
        - key: keycloak.cli
          path: keycloak.cli
        name: keycloak-startup
      name: startup
    - name: kube-api-access-4mdbt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:31:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:31:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5e5bbd5b8f0f87fac0cfa01c12bf7112c5ae891b201c589165a8e31310ff779
      image: quay.io/keycloak/keycloak:17.0.1-legacy
      imageID: quay.io/keycloak/keycloak@sha256:68f9f38c8f3005eb1c7f5afade9d28975f03022500d7b42c9a9a11d1f4b606ab
      lastState:
        terminated:
          containerID: containerd://b0afcd167aefe66199a190f7d474c7393dbe9ac61126a7fc1a76f13b8b9a350c
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:19:10Z"
      name: keycloak
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:30:26Z"
    hostIP: 172.20.0.2
    initContainerStatuses:
    - containerID: containerd://bb368dbbeeb1ad9733ab45700669fc249d607931831e50ac9c7e6c407b2fa86e
      image: docker.io/library/busybox:1.32
      imageID: docker.io/library/busybox@sha256:ae39a6f5c07297d7ab64dbd4f82c77c874cc6a94cea29fdec309d0992574b4f7
      lastState: {}
      name: pgchecker
      ready: true
      restartCount: 1
      state:
        terminated:
          containerID: containerd://bb368dbbeeb1ad9733ab45700669fc249d607931831e50ac9c7e6c407b2fa86e
          exitCode: 0
          finishedAt: "2025-05-24T15:30:24Z"
          reason: Completed
          startedAt: "2025-05-24T15:29:54Z"
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: Burstable
    startTime: "2025-05-23T13:08:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:08:18Z"
    generateName: keycloak-postgresql-
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      controller-revision-hash: keycloak-postgresql-6b67cfbbdb
      helm.sh/chart: postgresql-10.16.2
      role: primary
      statefulset.kubernetes.io/pod-name: keycloak-postgresql-0
    name: keycloak-postgresql-0
    namespace: auth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak-postgresql
      uid: ef3fc80a-3a65-4d2c-b1e1-e94b8ada1b49
    resourceVersion: "660213"
    uid: 530f6811-2a77-427f-868c-c22c57e89e1c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: primary
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: postgresql
            namespaces:
            - auth
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: POSTGRESQL_PORT_NUMBER
        value: "5432"
      - name: POSTGRESQL_VOLUME_DIR
        value: /bitnami/postgresql
      - name: PGDATA
        value: /bitnami/postgresql/data
      - name: POSTGRES_POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgresql-postgres-password
            name: keycloak-postgresql
      - name: POSTGRES_USER
        value: keycloak
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgresql-password
            name: keycloak-postgresql
      - name: POSTGRES_DB
        value: keycloak
      - name: POSTGRESQL_ENABLE_LDAP
        value: "no"
      - name: POSTGRESQL_ENABLE_TLS
        value: "no"
      - name: POSTGRESQL_LOG_HOSTNAME
        value: "false"
      - name: POSTGRESQL_LOG_CONNECTIONS
        value: "false"
      - name: POSTGRESQL_LOG_DISCONNECTIONS
        value: "false"
      - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
        value: "off"
      - name: POSTGRESQL_CLIENT_MIN_MESSAGES
        value: error
      - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
        value: pgaudit
      image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p 5432
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: keycloak-postgresql
      ports:
      - containerPort: 5432
        name: tcp-postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p 5432
            [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-postgresql-0
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: keycloak-postgresql-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-keycloak-postgresql-0
    - emptyDir:
        medium: Memory
      name: dshm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://427cd4dae6fe9f6aea09dc7b38bb4e5f131efac3ddb3420b3b6bec725beff2f4
      image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
      imageID: docker.io/bitnami/postgresql@sha256:522b02d183e01d30fedc81ebd842f66bb5d1a46e2ee33a85b5d90fbbe20718c3
      lastState:
        terminated:
          containerID: containerd://97f8a6693141af84ad31d505681b500b2c88cbc8ce13d5ef9bd030c2c1773de9
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:09:09Z"
      name: keycloak-postgresql
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: Burstable
    startTime: "2025-05-23T13:08:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T15:32:33Z"
    generateName: gatekeeper-audit-78789fc48b-
    labels:
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
      pod-template-hash: 78789fc48b
    name: gatekeeper-audit-78789fc48b-q9spv
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gatekeeper-audit-78789fc48b
      uid: 945673c8-aabb-4f9b-98d0-4045600ec9a8
    resourceVersion: "660287"
    uid: 894bb176-7d08-43f2-9d91-15a21adcdb4b
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --operation=audit
      - --operation=status
      - --operation=mutation-status
      - --operation=generate
      - --logtostderr
      - --disable-opa-builtin={http.send}
      - --disable-cert-rotation
      command:
      - /manager
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_NAME
        value: manager
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
      image: openpolicyagent/gatekeeper:v3.19.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8888
        name: metrics
        protocol: TCP
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /tmp/audit
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-955px
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gatekeeper-admin
    serviceAccountName: gatekeeper-admin
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: gatekeeper-webhook-server-cert
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-955px
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cd00b6213ee9a93a067d01c5aff42c6f294880a9ef384049780149cc8b6e7473
      image: docker.io/openpolicyagent/gatekeeper:v3.19.1
      imageID: docker.io/openpolicyagent/gatekeeper@sha256:940d47bd80306a9501981fbd0dbbd03a1683001ea31b68264b118798a7414048
      lastState:
        terminated:
          containerID: containerd://4477b29a129780faf4c2d87a6080a33fea8cd60d9b203b17a02d309f68eb8d54
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T15:33:19Z"
      name: manager
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:55Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.33
    podIPs:
    - ip: 10.244.0.33
    qosClass: Burstable
    startTime: "2025-05-23T15:32:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T15:32:33Z"
    generateName: gatekeeper-controller-manager-d99dbf8dd-
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
      pod-template-hash: d99dbf8dd
    name: gatekeeper-controller-manager-d99dbf8dd-4mc7s
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gatekeeper-controller-manager-d99dbf8dd
      uid: ce3de65d-da74-4fee-adba-4aa426c4b166
    resourceVersion: "660280"
    uid: 659f21b9-3a39-4d1c-a5f5-2b7590549865
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: gatekeeper.sh/operation
                operator: In
                values:
                - webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - --port=8443
      - --logtostderr
      - --exempt-namespace=gatekeeper-system
      - --operation=webhook
      - --operation=mutation-webhook
      - --disable-opa-builtin={http.send}
      command:
      - /manager
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_NAME
        value: manager
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
      image: openpolicyagent/gatekeeper:v3.19.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8443
        name: webhook-server
        protocol: TCP
      - containerPort: 8888
        name: metrics
        protocol: TCP
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2f8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gatekeeper-admin
    serviceAccountName: gatekeeper-admin
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: gatekeeper-webhook-server-cert
    - name: kube-api-access-z2f8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://864a1aa35b15eb793f77121249342b1c5759fdd758e5fba5d7ec526c6684da18
      image: docker.io/openpolicyagent/gatekeeper:v3.19.1
      imageID: docker.io/openpolicyagent/gatekeeper@sha256:940d47bd80306a9501981fbd0dbbd03a1683001ea31b68264b118798a7414048
      lastState:
        terminated:
          containerID: containerd://903df175a6319b5748dc1d3c7b27a837b80ff5746f64b3ff952f92c74d6f1f26
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T15:32:55Z"
      name: manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:53Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.24
    podIPs:
    - ip: 10.244.0.24
    qosClass: Burstable
    startTime: "2025-05-23T15:32:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T15:32:33Z"
    generateName: gatekeeper-controller-manager-d99dbf8dd-
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
      pod-template-hash: d99dbf8dd
    name: gatekeeper-controller-manager-d99dbf8dd-sw7db
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gatekeeper-controller-manager-d99dbf8dd
      uid: ce3de65d-da74-4fee-adba-4aa426c4b166
    resourceVersion: "660319"
    uid: 1c15391a-f257-4837-852d-4b0a61122336
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: gatekeeper.sh/operation
                operator: In
                values:
                - webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - --port=8443
      - --logtostderr
      - --exempt-namespace=gatekeeper-system
      - --operation=webhook
      - --operation=mutation-webhook
      - --disable-opa-builtin={http.send}
      command:
      - /manager
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_NAME
        value: manager
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
      image: openpolicyagent/gatekeeper:v3.19.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8443
        name: webhook-server
        protocol: TCP
      - containerPort: 8888
        name: metrics
        protocol: TCP
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4cpgf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gatekeeper-admin
    serviceAccountName: gatekeeper-admin
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: gatekeeper-webhook-server-cert
    - name: kube-api-access-4cpgf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8dd2c69b140476940760207531b6a5959a38ba335483fcefe7ec52af58f35f42
      image: docker.io/openpolicyagent/gatekeeper:v3.19.1
      imageID: docker.io/openpolicyagent/gatekeeper@sha256:940d47bd80306a9501981fbd0dbbd03a1683001ea31b68264b118798a7414048
      lastState:
        terminated:
          containerID: containerd://47544ab2a542f8d6d2959cb5232a8802bbc3c5acadaf2edba0a5fe60b78d79b3
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T15:32:57Z"
      name: manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:51Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.25
    podIPs:
    - ip: 10.244.0.25
    qosClass: Burstable
    startTime: "2025-05-23T15:32:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T15:32:33Z"
    generateName: gatekeeper-controller-manager-d99dbf8dd-
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
      pod-template-hash: d99dbf8dd
    name: gatekeeper-controller-manager-d99dbf8dd-tq857
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gatekeeper-controller-manager-d99dbf8dd
      uid: ce3de65d-da74-4fee-adba-4aa426c4b166
    resourceVersion: "660392"
    uid: 2b4ad0fd-8fe7-432c-b07e-f841f997f79c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: gatekeeper.sh/operation
                operator: In
                values:
                - webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - --port=8443
      - --logtostderr
      - --exempt-namespace=gatekeeper-system
      - --operation=webhook
      - --operation=mutation-webhook
      - --disable-opa-builtin={http.send}
      command:
      - /manager
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_NAME
        value: manager
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
      image: openpolicyagent/gatekeeper:v3.19.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8443
        name: webhook-server
        protocol: TCP
      - containerPort: 8888
        name: metrics
        protocol: TCP
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kxfwr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gatekeeper-admin
    serviceAccountName: gatekeeper-admin
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: gatekeeper-webhook-server-cert
    - name: kube-api-access-kxfwr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T15:32:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://03ec244bd27646ce0f934dd489dd9744c635cf6eca3229dcf49384009c395988
      image: docker.io/openpolicyagent/gatekeeper:v3.19.1
      imageID: docker.io/openpolicyagent/gatekeeper@sha256:940d47bd80306a9501981fbd0dbbd03a1683001ea31b68264b118798a7414048
      lastState:
        terminated:
          containerID: containerd://30198479c70313074903988a27f97071f7c2260f4d77a06e4ca61d83d1d44070
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T15:32:59Z"
      name: manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:56Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.29
    podIPs:
    - ip: 10.244.0.29
    qosClass: Burstable
    startTime: "2025-05-23T15:32:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:08:30Z"
    generateName: strimzi-cluster-operator-68fd5bf4f7-
    labels:
      name: strimzi-cluster-operator
      pod-template-hash: 68fd5bf4f7
      strimzi.io/kind: cluster-operator
    name: strimzi-cluster-operator-68fd5bf4f7-7989k
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: strimzi-cluster-operator-68fd5bf4f7
      uid: 18556039-c9ab-4d4f-b03d-d091effff67a
    resourceVersion: "720903"
    uid: 5690fc0d-7bb4-4a63-95cf-c1960c949a9f
  spec:
    containers:
    - args:
      - /opt/strimzi/bin/cluster_operator_run.sh
      env:
      - name: STRIMZI_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
        value: "120000"
      - name: STRIMZI_OPERATION_TIMEOUT_MS
        value: "300000"
      - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
        value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
      - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
        value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
      - name: STRIMZI_KAFKA_IMAGES
        value: |
          3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
          4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
      - name: STRIMZI_KAFKA_CONNECT_IMAGES
        value: |
          3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
          4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
      - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
        value: |
          3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
          4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
      - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
        value: quay.io/strimzi/operator:0.46.0
      - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
        value: quay.io/strimzi/operator:0.46.0
      - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
        value: quay.io/strimzi/operator:0.46.0
      - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
        value: quay.io/strimzi/kafka-bridge:0.32.0
      - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
        value: quay.io/strimzi/kaniko-executor:0.46.0
      - name: STRIMZI_DEFAULT_MAVEN_BUILDER
        value: quay.io/strimzi/maven-builder:0.46.0
      - name: STRIMZI_OPERATOR_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STRIMZI_FEATURE_GATES
      - name: STRIMZI_LEADER_ELECTION_ENABLED
        value: "true"
      - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
        value: strimzi-cluster-operator
      - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STRIMZI_LEADER_ELECTION_IDENTITY
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/strimzi/operator:0.46.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthy
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: strimzi-cluster-operator
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 384Mi
        requests:
          cpu: 200m
          memory: 384Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /opt/strimzi/custom-config/
        name: co-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fvk52
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: strimzi-cluster-operator
    serviceAccountName: strimzi-cluster-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        medium: Memory
        sizeLimit: 1Mi
      name: strimzi-tmp
    - configMap:
        defaultMode: 420
        name: strimzi-cluster-operator
      name: co-config-volume
    - name: kube-api-access-fvk52
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-26T05:18:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-26T05:18:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://268e77ac66545ba8748d3b9bb418f133dfbf4c63417c5a848ad0c00cee92af21
      image: quay.io/strimzi/operator:0.46.0
      imageID: quay.io/strimzi/operator@sha256:ac434a48ac2b27b2b8f36001814897649c0193a78eb76d7cb4719c7f8cb4b275
      lastState:
        terminated:
          containerID: containerd://9f2a37d4e69cca64bbca4512ed24ed885c57d3ae03e6ba372a04c1727af0895c
          exitCode: 1
          finishedAt: "2025-05-26T05:17:45Z"
          reason: Error
          startedAt: "2025-05-26T04:20:17Z"
      name: strimzi-cluster-operator
      ready: true
      restartCount: 49
      started: true
      state:
        running:
          startedAt: "2025-05-26T05:17:47Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2025-05-23T13:08:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:07:03Z"
    generateName: coredns-5d78c9869d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5d78c9869d
    name: coredns-5d78c9869d-9dt2p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5d78c9869d
      uid: 9bb8db9e-99a4-4e18-aa17-f87bd2658151
    resourceVersion: "660295"
    uid: 20ac1b64-937e-4872-a955-1c87c35ba283
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4sk5v
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-4sk5v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2f61766f9b2722d7b339b894ce0cf21acb63f1f139c3376f88a4fbbdc5a5b1f
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imageID: sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc
      lastState:
        terminated:
          containerID: containerd://abba4b37a8b698ece059ab010d403a010e69870d7a456a9dc912f60fabf7c177
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:07:07Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: Burstable
    startTime: "2025-05-23T13:07:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:07:03Z"
    generateName: coredns-5d78c9869d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5d78c9869d
    name: coredns-5d78c9869d-tkqrl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5d78c9869d
      uid: 9bb8db9e-99a4-4e18-aa17-f87bd2658151
    resourceVersion: "659992"
    uid: c6fd8ab6-d9a9-4190-a982-71f5bcf7b11a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-klf65
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-klf65
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:30:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c6a96f3fe98d0042fad244a39deb4c12309173255547b6fb28a9f3f7a4f868e2
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imageID: sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc
      lastState:
        terminated:
          containerID: containerd://7b75308e22f4dee6688c412b1ed3b7aac9b56a1a95861664a9fd71a0b4a6a721
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:07:07Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: Burstable
    startTime: "2025-05-23T13:07:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://172.20.0.2:2379
      kubernetes.io/config.hash: 7bdac7309c77db8a461594ddc21fea05
      kubernetes.io/config.mirror: 7bdac7309c77db8a461594ddc21fea05
      kubernetes.io/config.seen: "2025-05-23T13:06:40.174098253Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-05-23T13:06:47Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-pop-demo-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: pop-demo-control-plane
      uid: 9a37cedd-5152-4ea5-beba-6eb0db12e8b5
    resourceVersion: "660289"
    uid: aa4b8b53-a2f3-4dff-8c46-9031a8dd1ef5
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://172.20.0.2:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://172.20.0.2:2380
      - --initial-cluster=pop-demo-control-plane=https://172.20.0.2:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://172.20.0.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://172.20.0.2:2380
      - --name=pop-demo-control-plane
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.7-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c74b9c84d62360f97bf72e451ea5df0d3a24e25ed8a0f919852de477696ebd55
      image: registry.k8s.io/etcd:3.5.7-0
      imageID: sha256:86b6af7dd652c1b38118be1c338e9354b33469e69a218f7e290a0ca5304ad681
      lastState:
        terminated:
          containerID: containerd://e9edb3b5b7e8e4b5e4a1e9430c1bf93c20d6e2f403e47b74c6044a80a0c5beca
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-24T14:47:20Z"
      name: etcd
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:37Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: Burstable
    startTime: "2025-05-24T15:29:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:07:03Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 6446c986b6
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-42m9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 201c9bf9-3f80-4e3e-a198-0769b9f63a73
    resourceVersion: "660203"
    uid: 72f4dbaa-5bf8-4a68-9e39-f4d60d3d9ada
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - pop-demo-control-plane
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      - name: CONTROL_PLANE_ENDPOINT
        value: pop-demo-control-plane:6443
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wpfz7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-wpfz7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1d8fc4355a4b65a7ff0e91d7a12378aea05195befdbba476d5509dbff74120a9
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imageID: sha256:b0b1fa0f58c6e932b7f20bf208b2841317a1e8c88cc51b18358310bbd8ec95da
      lastState:
        terminated:
          containerID: containerd://53ccdc65914d6cbf6ab4fb73b1643d130277ec6386ede61375b7c08941a37887
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:07:04Z"
      name: kindnet-cni
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:49Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: Guaranteed
    startTime: "2025-05-23T13:07:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 172.20.0.2:6443
      kubernetes.io/config.hash: 7e3b1cb0614adca8f4541b4ede700b32
      kubernetes.io/config.mirror: 7e3b1cb0614adca8f4541b4ede700b32
      kubernetes.io/config.seen: "2025-05-23T13:06:40.173868617Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-05-23T13:06:47Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-pop-demo-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: pop-demo-control-plane
      uid: 9a37cedd-5152-4ea5-beba-6eb0db12e8b5
    resourceVersion: "660238"
    uid: 1bb1a364-3f41-4ed2-9596-5c8c7c6e029b
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=172.20.0.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --runtime-config=
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/16
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.27.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 172.20.0.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 172.20.0.2
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 172.20.0.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://210393c745cf1db2dbdd6f091beb3034ea6918fa35aede8a7a8a479bfc943624
      image: registry.k8s.io/kube-apiserver:v1.27.3
      imageID: docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762
      lastState:
        terminated:
          containerID: containerd://e5d9ccdf87723841026610fa9fb9e114689d6a43a6b3210e06ddbc1480351315
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:06:41Z"
      name: kube-apiserver
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:37Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: Burstable
    startTime: "2025-05-24T15:29:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 12a81844a12bbda4e9f5c234814c8323
      kubernetes.io/config.mirror: 12a81844a12bbda4e9f5c234814c8323
      kubernetes.io/config.seen: "2025-05-23T13:06:40.174095025Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-05-23T13:06:47Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-pop-demo-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: pop-demo-control-plane
      uid: 9a37cedd-5152-4ea5-beba-6eb0db12e8b5
    resourceVersion: "660315"
    uid: 05af17b5-c9ce-4137-9b32-e638ac3d288a
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=pop-demo
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --enable-hostpath-provisioner=true
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/16
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.27.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b5e76c937dea3950430b8e24a9c75a08c4e263ae8ee80d468dac6505b0eba103
      image: registry.k8s.io/kube-controller-manager:v1.27.3
      imageID: docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7
      lastState:
        terminated:
          containerID: containerd://59dbbe44cd8dce741308b7806d0c28a1f3f9dae53f7b332d905283f3adf6f748
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-24T14:46:46Z"
      name: kube-controller-manager
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:37Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: Burstable
    startTime: "2025-05-24T15:29:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:07:03Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 56999f657b
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-s6g85
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 65be8f05-974f-467b-9885-5cc517a28867
    resourceVersion: "660291"
    uid: 90fa6578-aec6-411f-a7a0-fd893005d470
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - pop-demo-control-plane
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.27.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8w5jr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-8w5jr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:07:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae1e6e6ee21f49d7d22464b4bbf8d50cb01a62473fab6589c32438af0c46c0c4
      image: registry.k8s.io/kube-proxy:v1.27.3
      imageID: docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183
      lastState:
        terminated:
          containerID: containerd://b0d889eeacf6a7f11dbf9bd1caf160d4786d0133d8bbbbc6ee230c5b528d8f52
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:07:04Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: BestEffort
    startTime: "2025-05-23T13:07:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: af2688aec803efabd6244180645a259a
      kubernetes.io/config.mirror: af2688aec803efabd6244180645a259a
      kubernetes.io/config.seen: "2025-05-23T13:06:48.657303140Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-05-23T13:06:48Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-pop-demo-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: pop-demo-control-plane
      uid: 9a37cedd-5152-4ea5-beba-6eb0db12e8b5
    resourceVersion: "660397"
    uid: ab99f05c-6ccb-4c1c-abad-dfbc6d700d1a
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.27.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T21:18:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T21:18:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://278d96aca3367f14f2f035aa92e772b567e79d85a522e7a210c0289b23074b43
      image: registry.k8s.io/kube-scheduler:v1.27.3
      imageID: docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2
      lastState:
        terminated:
          containerID: containerd://191807f7d2084106f70720a1d798fc2f8caeaa47b76e34228f2c001b6d6a1726
          exitCode: 1
          finishedAt: "2025-05-25T20:23:27Z"
          reason: Error
          startedAt: "2025-05-24T19:37:37Z"
      name: kube-scheduler
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-05-25T20:23:29Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 172.20.0.2
    podIPs:
    - ip: 172.20.0.2
    qosClass: Burstable
    startTime: "2025-05-24T15:29:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T13:18:04Z"
    generateName: local-path-provisioner-bc7974f65-
    labels:
      app: local-path-provisioner
      pod-template-hash: bc7974f65
    name: local-path-provisioner-bc7974f65-r7w74
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-bc7974f65
      uid: dd63e7c7-dd63-43c7-8a5f-176811a0ef1e
    resourceVersion: "660384"
    uid: 1b1486ef-6335-46e9-9ea7-61b149adee3f
  spec:
    containers:
    - command:
      - local-path-provisioner
      - --debug
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_MOUNT_PATH
        value: /etc/config/
      image: rancher/local-path-provisioner:v0.0.31
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d87nl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-d87nl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:18:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:18:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bc72de945ac578e65ea62fd2e563046ed5f111db4bf9cef913c0458f5b608b0f
      image: docker.io/rancher/local-path-provisioner:v0.0.31
      imageID: docker.io/rancher/local-path-provisioner@sha256:80496fdeb307541007621959aa13aed41d31db9cd2dc4167c19833e0bfa3878c
      lastState:
        terminated:
          containerID: containerd://2b2c9bae08d1b5616ee5ef034cdfac0c29975c7e9b7ae565285dbf8e23905d1a
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:19:19Z"
      name: local-path-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.28
    podIPs:
    - ip: 10.244.0.28
    qosClass: BestEffort
    startTime: "2025-05-23T13:18:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-05-24T17:41:21+05:30"
    creationTimestamp: "2025-05-24T14:47:44Z"
    generateName: atlas-747cd98f4c-
    labels:
      app: atlas
      pod-template-hash: 747cd98f4c
    name: atlas-747cd98f4c-p86sc
    namespace: metadata
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: atlas-747cd98f4c
      uid: 0e88403f-e836-4f01-9362-3e6c7768c952
    resourceVersion: "659947"
    uid: 7b5fb21f-079d-49bf-aacd-6d79f5c494c2
  spec:
    containers:
    - image: sburn/apache-atlas:2.3.0
      imagePullPolicy: IfNotPresent
      name: atlas
      ports:
      - containerPort: 21000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5bzjm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5bzjm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T14:47:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T14:47:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5d0d8245771f509d5ba1cb626309b463a8f524f9d4e93e645181df9a58189468
      image: docker.io/sburn/apache-atlas:2.3.0
      imageID: docker.io/sburn/apache-atlas@sha256:9192ed82f33072321590a0cd99be7d04e2afe74c35987dc109160a4f3bf00af7
      lastState:
        terminated:
          containerID: containerd://06a0f6ad9a9fade0d588d5ecf1f74343cde3d799dc6a73f4c20f6c98e35f9c86
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-24T14:47:45Z"
      name: atlas
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.32
    podIPs:
    - ip: 10.244.0.32
    qosClass: BestEffort
    startTime: "2025-05-24T14:47:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-24T16:46:38Z"
    generateName: neo4j-
    labels:
      app.kubernetes.io/component: neo4j
      app.kubernetes.io/instance: neo4j
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: neo4j
      app.kubernetes.io/version: 5.26.6
      controller-revision-hash: neo4j-5648784fb6
      helm.sh/chart: neo4j-0.4.3
      statefulset.kubernetes.io/pod-name: neo4j-0
    name: neo4j-0
    namespace: metadata
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: neo4j
      uid: 2536d72a-43b3-4745-8a11-6cb5df99d618
    resourceVersion: "660309"
    uid: d1770e6b-b01b-4898-b16c-1cae3fe87426
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: neo4j
                app.kubernetes.io/instance: neo4j
                app.kubernetes.io/name: neo4j
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: NEO4J_BOLT_PORT_NUMBER
        value: "7687"
      - name: NEO4J_HTTP_PORT_NUMBER
        value: "7474"
      - name: NEO4J_HOST
        value: 127.0.0.1
      - name: NEO4J_BOLT_ADVERTISED_PORT_NUMBER
        value: "7687"
      - name: NEO4J_HTTP_ADVERTISED_PORT_NUMBER
        value: "7474"
      - name: NEO4J_PASSWORD_FILE
        value: /opt/bitnami/neo4j/secrets/password
      image: docker.io/bitnami/neo4j:5.26.6-debian-12-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 20
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: bolt
        timeoutSeconds: 10
      name: neo4j
      ports:
      - containerPort: 7687
        name: bolt
        protocol: TCP
      - containerPort: 7474
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 20
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/neo4j
        name: data
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/neo4j/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /opt/bitnami/neo4j/.home
        name: empty-dir
        subPath: app-home-dir
      - mountPath: /opt/bitnami/neo4j/plugins
        name: empty-dir
        subPath: app-plugins-dir
      - mountPath: /opt/bitnami/neo4j/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/neo4j/run
        name: empty-dir
        subPath: app-run-dir
      - mountPath: /opt/bitnami/neo4j/secrets
        name: neo4j-secrets
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: neo4j-0
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: neo4j
    serviceAccountName: neo4j
    subdomain: neo4j
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-neo4j-0
    - emptyDir: {}
      name: empty-dir
    - name: neo4j-secrets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: neo4j
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T16:46:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T16:47:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T16:47:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T16:46:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3149733a9d11dc63016474539dc7199747719b8335eb7dbfe65bbb29b89588a9
      image: docker.io/bitnami/neo4j:5.26.6-debian-12-r0
      imageID: docker.io/bitnami/neo4j@sha256:515d2d7d1850c6a64111c460d7ab1115c6fd9729cdd9ccfa28906e9005da85f1
      lastState: {}
      name: neo4j
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-24T16:46:38Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.38
    podIPs:
    - ip: 10.244.0.38
    qosClass: Burstable
    startTime: "2025-05-24T16:46:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-0
    name: minio-0
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660377"
    uid: abec8562-edd1-4872-b92b-eaa8ed019ee4
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kqdlx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-0
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-0
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-kqdlx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://23178fb76f42e09b551743f7dc5eb9fe2731a34321805a69703bffd8cf1581bd
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://163f0d3e307284a99b3b209866aa4c8a332903d38c5345d701f88c4ed929c8aa
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:19Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:49Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.31
    podIPs:
    - ip: 10.244.0.31
    qosClass: Burstable
    startTime: "2025-05-23T13:08:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-1
    name: minio-1
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660333"
    uid: ffbc48a9-fa4c-4aaa-b484-0968e59d08c4
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cbsqg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-1
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-1
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-cbsqg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5f31ffc76a60806583097baaaf4732cf80b29f3182f7fcd512eca3832db82c14
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://3998fba837c976374a6332b21dc96d529775f6b881c259918b887e2a87f95f77
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:20Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: Burstable
    startTime: "2025-05-23T13:08:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-10
    name: minio-10
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660244"
    uid: 887e3334-e955-410a-8720-640b49a00164
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gz46h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-10
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-10
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-gz46h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://77ca5095d61bf943938101fcefc91325b517b9bac4284b0744677752dcdfc01c
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://9979c944ab84a9bfc07b8366c3ccd39f61c17202a537d2df11e18f879c6606d3
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:29Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.19
    podIPs:
    - ip: 10.244.0.19
    qosClass: Burstable
    startTime: "2025-05-23T13:08:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-11
    name: minio-11
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660257"
    uid: 53da9d69-5367-49c3-ac05-d90336703160
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvnxw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-11
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-11
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-nvnxw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c10207b460db62e73095120f31c2e4275ebf4a62920cf035a58249469f79e24
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://4efee9e4724f2e90078aaac1b14d0e6563e49eec67002ead9fb809fd28afac87
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:30Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.23
    podIPs:
    - ip: 10.244.0.23
    qosClass: Burstable
    startTime: "2025-05-23T13:08:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:35Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-12
    name: minio-12
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660362"
    uid: 2224d5fc-2dbe-4d4d-b269-7fc4f7057517
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4tp7q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-12
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-12
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-4tp7q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2850ba94b03258d3b7d0142eb4512dc2800028ad3563a7ae11b4e7f92c33479e
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://6add252c68523c8d5a432ab87161924cc8bc77cd5f7fa4f28ebab24fff94b90f
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:31Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.30
    podIPs:
    - ip: 10.244.0.30
    qosClass: Burstable
    startTime: "2025-05-23T13:08:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:35Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-13
    name: minio-13
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660342"
    uid: a40ba1a8-bf10-4166-9f54-713cf4e03328
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mdqcz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-13
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-13
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-mdqcz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://31c61d83603419be4492f9aacce2086ab9ad2563a0c0369f5cb882a99cfc908e
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://7289b0315a055ec7ccdacef169bbd1e02e2f361875912c97b1f61946ab440c02
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:32Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.35
    podIPs:
    - ip: 10.244.0.35
    qosClass: Burstable
    startTime: "2025-05-23T13:08:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:35Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-14
    name: minio-14
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660316"
    uid: ed8ad26a-5d4f-4c3b-9c33-6c644bebea54
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9wql
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-14
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-14
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-w9wql
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8eb990873d480a84091bb4c13be082616666ad5c7597da9b1f98b830608ce0d6
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://408768e86c3d2f50d88dc44283f4ee1a7e329b3429d57382c6f8b4886026eabd
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:33Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.22
    podIPs:
    - ip: 10.244.0.22
    qosClass: Burstable
    startTime: "2025-05-23T13:08:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:35Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-15
    name: minio-15
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660359"
    uid: 026c6fbd-279a-403c-9aa4-54dddf372db7
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vlld7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-15
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-15
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-vlld7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3b78da23be2472865dd41e4a8e05145eca0badb5a1d08e253cb1e381cc5804e7
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://b694179571df2d260a465465ac9a2eb104843209a6141178f302e0b0c768a4fb
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:34Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.21
    podIPs:
    - ip: 10.244.0.21
    qosClass: Burstable
    startTime: "2025-05-23T13:08:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-2
    name: minio-2
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660261"
    uid: e26e5ecc-7eb2-4bd0-a665-2c1b45ede315
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42c9f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-2
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-2
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-42c9f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d2ac90da8b284086b1aad3dde1b15ff5e737a78c724138909c3b18d50aabc2be
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://a5d083d99a5a6608196e2f6fe37d7cad55cd80b409e19ede0214dc8db7b791fd
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:21Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:49Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.34
    podIPs:
    - ip: 10.244.0.34
    qosClass: Burstable
    startTime: "2025-05-23T13:08:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-3
    name: minio-3
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660369"
    uid: 43f5a871-bfa5-465f-bf9e-4602f42b37c9
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5j586
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-3
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-3
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-5j586
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://10b88a84488b8c00a7b2df435b0101aa9a5a826ce58d3dfbc044909b66418eab
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://0f50771e1ce21012fb644b18a69e2d1f2ad1352bc219616eb1a0d776a2d71aac
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:22Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: Burstable
    startTime: "2025-05-23T13:08:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-4
    name: minio-4
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660251"
    uid: 82685241-1a02-448b-a387-09cffe6b7e2b
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m6cmp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-4
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-4
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-m6cmp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://08b7609c19deb1ba5e8c9c4ab16ff81f123043bab5df8a0b0919185996e3fb9c
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://9dfb765a48b8b6f7c7228c2697db1e300824365ce3e63558e2dd14e83210360a
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:23Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.18
    podIPs:
    - ip: 10.244.0.18
    qosClass: Burstable
    startTime: "2025-05-23T13:08:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-5
    name: minio-5
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660220"
    uid: b364f73d-24fc-44c8-86f9-b473e8f9ec4f
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zb46p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-5
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-5
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-zb46p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://62bb05f480f057457e275f0168adad0a38ef29d543dc0d66d2e2c5bc49b0ed5a
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://2cb9f969531af376ebae0470440c0074066a71f93e1d9d58cc7e190d909ba81b
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:25Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:49Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.20
    podIPs:
    - ip: 10.244.0.20
    qosClass: Burstable
    startTime: "2025-05-23T13:08:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-6
    name: minio-6
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660231"
    uid: b3efca67-1e9b-4e4b-813e-e2088f33ba6a
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c2j7s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-6
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-6
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-c2j7s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b4f1bfc340aa40b62d8250752b46d8ab4bdc37f0e2f09b20df3d221c1ec9b9ec
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://35486be3c0279877f1a0321b8e3bf7624c2a3fb5bde7bd808db504906bec1bdd
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:24Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: Burstable
    startTime: "2025-05-23T13:08:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-7
    name: minio-7
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660269"
    uid: 3c99be61-bc58-4bc4-a3b3-127c96db3329
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf9ww
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-7
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-7
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-gf9ww
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1e40f2e2cc2a73f5fc19834ba7e1c58bccff59be791f275a4e108a28456b911
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://bfa0fd5a9647389f7fc71d936cc8c7b21a5a6136813914efbb86b1d3d70afc54
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:26Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:48Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: Burstable
    startTime: "2025-05-23T13:08:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-8
    name: minio-8
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660330"
    uid: fa10163a-04cb-4f5b-a73a-6e3a11866148
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwtsj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-8
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-8
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-gwtsj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5bb8ac45d3721b67616750995ba6a05f0f50727079ca71a3f69526e068614596
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://d81e23e110d926660f9ece1a997316f7d3fbe73ba5cfaef5e29cb26ace2a80d5
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:27Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.27
    podIPs:
    - ip: 10.244.0.27
    qosClass: Burstable
    startTime: "2025-05-23T13:08:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
      checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
    creationTimestamp: "2025-05-23T13:08:34Z"
    generateName: minio-
    labels:
      app: minio
      controller-revision-hash: minio-9f8899d4
      release: minio
      statefulset.kubernetes.io/pod-name: minio-9
    name: minio-9
    namespace: storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: minio
      uid: 33345c66-7f53-464c-a45d-d0e378d80466
    resourceVersion: "660226"
    uid: 12b428c4-c048-46d7-81cf-9fd970046882
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export
        name: export
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-chfhv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: minio-9
    nodeName: pop-demo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export
      persistentVolumeClaim:
        claimName: export-minio-9
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: minio
    - name: kube-api-access-chfhv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-24T15:29:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T13:08:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://20690543afede93028ce1e980c72f9c5e82f9e33a4a5f4b87300b95d5bb7fd7e
      image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
      imageID: quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3
      lastState:
        terminated:
          containerID: containerd://8f63fdf98a0474ead42b32aea76dfd6a5a16370b53f544142a91530d12a6a7f4
          exitCode: 255
          finishedAt: "2025-05-24T15:29:32Z"
          reason: Unknown
          startedAt: "2025-05-23T13:17:28Z"
      name: minio
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-05-24T15:29:50Z"
    hostIP: 172.20.0.2
    phase: Running
    podIP: 10.244.0.36
    podIPs:
    - ip: 10.244.0.36
    qosClass: Burstable
    startTime: "2025-05-23T13:08:51Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:32Z"
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: connector-builder-server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: connector-builder-server-1.6.2
    name: airbyte-airbyte-connector-builder-server-svc
    namespace: airbyte
    resourceVersion: "1062"
    uid: a0de1d83-9df6-4b7f-941f-9f50328c0cb0
  spec:
    clusterIP: 10.96.148.159
    clusterIPs:
    - 10.96.148.159
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31053
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: connector-builder-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:32Z"
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: server-1.6.2
    name: airbyte-airbyte-server-svc
    namespace: airbyte
    resourceVersion: "1048"
    uid: 2be35561-eebe-4529-85af-4626a5dda8da
  spec:
    clusterIP: 10.96.86.63
    clusterIPs:
    - 10.96.86.63
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8001
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:32Z"
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webapp
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: webapp-1.6.2
    name: airbyte-airbyte-webapp-svc
    namespace: airbyte
    resourceVersion: "1053"
    uid: 60093256-b1a3-4867-afff-01a4f96a0465
  spec:
    clusterIP: 10.96.254.250
    clusterIPs:
    - 10.96.254.250
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: webapp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:32Z"
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: temporal
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: temporal-1.6.2
    name: airbyte-temporal
    namespace: airbyte
    resourceVersion: "1057"
    uid: bdb81a07-1f86-4adf-8cad-cc06ff6a4f6e
  spec:
    clusterIP: 10.96.205.214
    clusterIPs:
    - 10.96.205.214
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 7233
      protocol: TCP
      targetPort: 7233
    selector:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: temporal
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:32Z"
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: workload-api-server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: workload-api-server-1.6.2
    name: airbyte-workload-api-server-svc
    namespace: airbyte
    resourceVersion: "1045"
    uid: b44a86dc-122b-4ed3-b937-5c4c390bec01
  spec:
    clusterIP: 10.96.84.155
    clusterIPs:
    - 10.96.84.155
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8007
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: workload-api-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-applicationset-controller
    namespace: argocd
    resourceVersion: "656"
    uid: a1c91fe7-5a3e-416d-b724-860cd1d7167e
  spec:
    clusterIP: 10.96.165.21
    clusterIPs:
    - 10.96.165.21
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-webhook
      port: 7000
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-applicationset-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "650"
    uid: 41ca8a63-5448-4be7-be6a-120345affc9c
  spec:
    clusterIP: 10.96.168.137
    clusterIPs:
    - 10.96.168.137
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-redis
    namespace: argocd
    resourceVersion: "648"
    uid: ca35dfed-9c7d-4929-b6ae-bf3bf5cb7d73
  spec:
    clusterIP: 10.96.190.102
    clusterIPs:
    - 10.96.190.102
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "664"
    uid: 55b16716-0616-475a-abc5-3e5b8ed7b37c
  spec:
    clusterIP: 10.96.72.115
    clusterIPs:
    - 10.96.72.115
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-repo-server
      port: 8081
      protocol: TCP
      targetPort: repo-server
    selector:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-server
    namespace: argocd
    resourceVersion: "660"
    uid: 83723ade-d2fa-4a1f-bae7-32697103fa75
  spec:
    clusterIP: 10.96.14.219
    clusterIPs:
    - 10.96.14.219
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    labels:
      app.kubernetes.io/component: headless
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 17.0.1-legacy
      helm.sh/chart: keycloak-18.10.0
    name: keycloak-headless
    namespace: auth
    resourceVersion: "821"
    uid: 5b95b771-1210-430a-8a3c-69085ebf48fb
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    labels:
      app.kubernetes.io/component: http
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 17.0.1-legacy
      helm.sh/chart: keycloak-18.10.0
    name: keycloak-http
    namespace: auth
    resourceVersion: "831"
    uid: 8990e47c-d8d4-43ae-b468-2fb61be52249
  spec:
    clusterIP: 10.96.218.137
    clusterIPs:
    - 10.96.218.137
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    - name: http-management
      port: 9990
      protocol: TCP
      targetPort: http-management
    selector:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    labels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-10.16.2
    name: keycloak-postgresql
    namespace: auth
    resourceVersion: "825"
    uid: 1df09df8-3d2f-4398-b2c1-594f766be91b
  spec:
    clusterIP: 10.96.9.119
    clusterIPs:
    - 10.96.9.119
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
      role: primary
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    labels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-10.16.2
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: keycloak-postgresql-headless
    namespace: auth
    resourceVersion: "820"
    uid: 2eb1043a-b6c2-42b4-a5bb-931c272fab23
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-05-23T13:06:47Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "229"
    uid: 7eaaa969-47d1-468c-8171-1d0c439c8196
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"gatekeeper.sh/system":"yes"},"name":"gatekeeper-webhook-service","namespace":"gatekeeper-system"},"spec":{"ports":[{"name":"https-webhook-server","port":443,"targetPort":"webhook-server"}],"selector":{"control-plane":"controller-manager","gatekeeper.sh/operation":"webhook","gatekeeper.sh/system":"yes"}}}
    creationTimestamp: "2025-05-23T15:32:33Z"
    labels:
      gatekeeper.sh/system: "yes"
    name: gatekeeper-webhook-service
    namespace: gatekeeper-system
    resourceVersion: "12744"
    uid: 68ddb569-960a-4340-a6ef-11d77aa7fbd7
  spec:
    clusterIP: 10.96.191.238
    clusterIPs:
    - 10.96.191.238
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https-webhook-server
      port: 443
      protocol: TCP
      targetPort: webhook-server
    selector:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-05-23T13:06:48Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "263"
    uid: 0d3bdd80-65af-495f-9e56-02fc44fd61d6
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: atlas:/Service:metadata/atlas
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"atlas:/Service:metadata/atlas"},"name":"atlas","namespace":"metadata"},"spec":{"ports":[{"name":"ui","port":21000,"targetPort":21000}],"selector":{"app":"atlas"}}}
    creationTimestamp: "2025-05-23T16:30:01Z"
    name: atlas
    namespace: metadata
    resourceVersion: "730134"
    uid: c67a3b94-e772-4e35-b448-3f9fdeb9440b
  spec:
    clusterIP: 10.96.71.14
    clusterIPs:
    - 10.96.71.14
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: ui
      port: 21000
      protocol: TCP
      targetPort: 21000
    selector:
      app: atlas
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: neo4j:/Service:metadata/neo4j
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"neo4j:/Service:metadata/neo4j"},"labels":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"neo4j","app.kubernetes.io/version":"5.26.6","helm.sh/chart":"neo4j-0.4.3"},"name":"neo4j","namespace":"metadata"},"spec":{"ports":[{"name":"bolt","nodePort":null,"port":7687,"protocol":"TCP"},{"name":"http","nodePort":null,"port":7474,"protocol":"TCP"}],"selector":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/name":"neo4j"},"sessionAffinity":"None","type":"ClusterIP"}}
      meta.helm.sh/release-name: neo4j
      meta.helm.sh/release-namespace: metadata
    creationTimestamp: "2025-05-23T13:08:24Z"
    labels:
      app.kubernetes.io/component: neo4j
      app.kubernetes.io/instance: neo4j
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: neo4j
      app.kubernetes.io/version: 5.26.6
      helm.sh/chart: neo4j-0.4.3
    name: neo4j
    namespace: metadata
    resourceVersion: "51347"
    uid: d7a7ec1f-9b88-4e57-b5fa-6e9b93d69b75
  spec:
    clusterIP: 10.96.195.216
    clusterIPs:
    - 10.96.195.216
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: bolt
      port: 7687
      protocol: TCP
      targetPort: 7687
    - name: http
      port: 7474
      protocol: TCP
      targetPort: 7474
    selector:
      app.kubernetes.io/component: neo4j
      app.kubernetes.io/instance: neo4j
      app.kubernetes.io/name: neo4j
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: minio
      meta.helm.sh/release-namespace: storage
    creationTimestamp: "2025-05-23T13:08:34Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-5.4.0
      heritage: Helm
      monitoring: "true"
      release: minio
    name: minio
    namespace: storage
    resourceVersion: "1133"
    uid: e5323476-db07-4dc8-91f8-8aa58f03d34f
  spec:
    clusterIP: 10.96.161.30
    clusterIPs:
    - 10.96.161.30
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: minio
      release: minio
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: minio
      meta.helm.sh/release-namespace: storage
    creationTimestamp: "2025-05-23T13:08:34Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-5.4.0
      heritage: Helm
      release: minio
    name: minio-console
    namespace: storage
    resourceVersion: "1138"
    uid: 74708a18-7c15-46a9-ae88-d120d2feefba
  spec:
    clusterIP: 10.96.111.118
    clusterIPs:
    - 10.96.111.118
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: minio
      release: minio
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: minio
      meta.helm.sh/release-namespace: storage
    creationTimestamp: "2025-05-23T13:08:34Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-5.4.0
      heritage: Helm
      release: minio
    name: minio-svc
    namespace: storage
    resourceVersion: "1131"
    uid: 44601c53-dcdc-4f59-9287-70088cb725f1
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
    publishNotReadyAddresses: true
    selector:
      app: minio
      release: minio
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-05-23T13:06:50Z"
    generation: 1
    labels:
      app: kindnet
      k8s-app: kindnet
      tier: node
    name: kindnet
    namespace: kube-system
    resourceVersion: "660204"
    uid: 201c9bf9-3f80-4e3e-a198-0769b9f63a73
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kindnet
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kindnet
          k8s-app: kindnet
          tier: node
      spec:
        containers:
        - env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_SUBNET
            value: 10.244.0.0/16
          - name: CONTROL_PLANE_ENDPOINT
            value: pop-demo-control-plane:6443
          image: docker.io/kindest/kindnetd:v20230511-dc714da8
          imagePullPolicy: IfNotPresent
          name: kindnet-cni
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_RAW
              - NET_ADMIN
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/cni/net.d
            name: cni-cfg
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kindnet
        serviceAccountName: kindnet
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-05-23T13:06:48Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "660292"
    uid: 65be8f05-974f-467b-9885-5cc517a28867
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.27.3
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: connector-builder-server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: connector-builder-server-1.6.2
    name: airbyte-connector-builder-server
    namespace: airbyte
    resourceVersion: "2848"
    uid: 8ed25736-cac9-433c-ad09-30cb5aee6403
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: connector-builder-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: connector-builder-server
      spec:
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          image: airbyte/connector-builder-server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-connector-builder-server
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-connector-builder-server-79989678bd-" is forbidden:
        error looking up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin"
        not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-connector-builder-server-79989678bd" has timed
        out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cron
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: cron-1.6.2
    name: airbyte-cron
    namespace: airbyte
    resourceVersion: "2850"
    uid: e5852868-78e5-4015-85ec-549bff878a5b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: cron
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: cron
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: CRON_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_DOCKER_MOUNT
                name: airbyte-airbyte-env
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/cron:1.6.2
          imagePullPolicy: IfNotPresent
          name: airbyte-cron
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-cron-6465dfb896-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-cron-6465dfb896" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: server-1.6.2
    name: airbyte-server
    namespace: airbyte
    resourceVersion: "2851"
    uid: 5831c8e4-35fc-48ca-8f1b-db55b72b3c56
  spec:
    minReadySeconds: 30
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: server
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: server
      spec:
        containers:
        - env:
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: AIRBYTE_URL
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_URL
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: SERVER_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKER_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                key: WORKER_ENVIRONMENT
                name: airbyte-airbyte-env
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: KEYCLOAK_INTERNAL_HOST
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_INTERNAL_HOST
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_SERVER_API_HOST
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_SERVER_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_AUTH_HEADER_NAME
            value: X-Airbyte-Auth
          - name: AIRBYTE_API_AUTH_HEADER_VALUE
            value: Internal server
          - name: ENTERPRISE_SOURCE_STUBS_URL
            valueFrom:
              configMapKeyRef:
                key: ENTERPRISE_SOURCE_STUBS_URL
                name: airbyte-airbyte-env
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-server-container
          ports:
          - containerPort: 8001
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-server-84fb8d6dd6-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-server-84fb8d6dd6" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: temporal
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: temporal-1.6.2
    name: airbyte-temporal
    namespace: airbyte
    resourceVersion: "2849"
    uid: 113b9c87-6724-4f6d-bd37-42c7b22eafed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: temporal
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: temporal
      spec:
        containers:
        - env:
          - name: AUTO_SETUP
            value: "true"
          - name: DB
            value: postgres12
          - name: DYNAMIC_CONFIG_FILE_PATH
            value: config/dynamicconfig/development.yaml
          - name: POSTGRES_SEEDS
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: POSTGRES_PWD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          image: temporalio/auto-setup:1.26
          imagePullPolicy: IfNotPresent
          name: airbyte-temporal
          ports:
          - containerPort: 7233
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/temporal/config/dynamicconfig/
            name: airbyte-temporal-dynamicconfig
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: development.yaml
              path: development.yaml
            name: airbyte-temporal-dynamicconfig
          name: airbyte-temporal-dynamicconfig
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-temporal-6cb79b7fc9-" is forbidden: error looking up
        service account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not
        found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-temporal-6cb79b7fc9" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webapp
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: webapp-1.6.2
    name: airbyte-webapp
    namespace: airbyte
    resourceVersion: "2847"
    uid: 6a4c9fcd-e6d9-46ed-a851-78cc561bf3ca
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: webapp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: webapp
      spec:
        containers:
        - env:
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: AIRBYTE_SERVER_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_SERVER_HOST
                name: airbyte-airbyte-env
          - name: KEYCLOAK_INTERNAL_HOST
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_INTERNAL_HOST
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_API_HOST
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: API_URL
            valueFrom:
              configMapKeyRef:
                key: API_URL
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_API_URL
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_API_URL
                name: airbyte-airbyte-env
          image: airbyte/webapp:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          name: airbyte-webapp-container
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /index.html
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-webapp-85bcd86c88-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-webapp-85bcd86c88" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: worker
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: worker-1.6.2
    name: airbyte-worker
    namespace: airbyte
    resourceVersion: "2853"
    uid: 4e985765-da7d-4143-ad77-03c658921b45
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: worker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: worker
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            value: workspace
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_WORKER_PORTS
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_WORKER_PORTS
                name: airbyte-airbyte-env
          - name: JOB_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_ATTEMPT
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_ATTEMPT
                name: airbyte-airbyte-env
          - name: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: SHOULD_RUN_NOTIFY_WORKFLOWS
            valueFrom:
              configMapKeyRef:
                key: SHOULD_RUN_NOTIFY_WORKFLOWS
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: WORKERS_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          - name: CONTAINER_ORCHESTRATOR_ENABLED
            value: "true"
          image: airbyte/worker:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: airbyte-worker-container
          ports:
          - containerPort: 9000
            name: heartbeat
            protocol: TCP
          - containerPort: 9001
            protocol: TCP
          - containerPort: 9002
            protocol: TCP
          - containerPort: 9003
            protocol: TCP
          - containerPort: 9004
            protocol: TCP
          - containerPort: 9005
            protocol: TCP
          - containerPort: 9006
            protocol: TCP
          - containerPort: 9007
            protocol: TCP
          - containerPort: 9008
            protocol: TCP
          - containerPort: 9009
            protocol: TCP
          - containerPort: 9010
            protocol: TCP
          - containerPort: 9011
            protocol: TCP
          - containerPort: 9012
            protocol: TCP
          - containerPort: 9013
            protocol: TCP
          - containerPort: 9014
            protocol: TCP
          - containerPort: 9015
            protocol: TCP
          - containerPort: 9016
            protocol: TCP
          - containerPort: 9017
            protocol: TCP
          - containerPort: 9018
            protocol: TCP
          - containerPort: 9019
            protocol: TCP
          - containerPort: 9020
            protocol: TCP
          - containerPort: 9021
            protocol: TCP
          - containerPort: 9022
            protocol: TCP
          - containerPort: 9023
            protocol: TCP
          - containerPort: 9024
            protocol: TCP
          - containerPort: 9025
            protocol: TCP
          - containerPort: 9026
            protocol: TCP
          - containerPort: 9027
            protocol: TCP
          - containerPort: 9028
            protocol: TCP
          - containerPort: 9029
            protocol: TCP
          - containerPort: 9030
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-worker-66775d8856-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-worker-66775d8856" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: workload-api-server
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: workload-api-server-1.6.2
    name: airbyte-workload-api-server
    namespace: airbyte
    resourceVersion: "2852"
    uid: 5bfb3ae6-393f-4a2d-b10e-4d6b0f6f9192
  spec:
    minReadySeconds: 30
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: workload-api-server
    strategy:
      rollingUpdate:
        maxSurge: 100%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: workload-api-server
      spec:
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_API_HOST
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: WORKERS_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/workload-api-server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-workload-api-server-container
          ports:
          - containerPort: 8007
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-workload-api-server-6b65676c9f-" is forbidden: error
        looking up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin"
        not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-workload-api-server-6b65676c9f" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: workload-launcher
      app.kubernetes.io/version: 1.6.2
      helm.sh/chart: workload-launcher-1.6.2
    name: airbyte-workload-launcher
    namespace: airbyte
    resourceVersion: "2854"
    uid: 8c42071c-9638-4895-bb38-6c7814014c5c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: workload-launcher
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: workload-launcher
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: RUNNING_TTL_MINUTES
          - name: SUCCEEDED_TTL_MINUTES
            value: "10"
          - name: UNSUCCESSFUL_TTL_MINUTES
            value: "120"
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: DATA_PLANE_ID
            value: local
          - name: PUB_SUB_ENABLED
            valueFrom:
              configMapKeyRef:
                key: PUB_SUB_ENABLED
                name: airbyte-airbyte-env
          - name: PUB_SUB_TOPIC_NAME
            valueFrom:
              configMapKeyRef:
                key: PUB_SUB_TOPIC_NAME
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            value: workspace
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_WORKER_PORTS
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_WORKER_PORTS
                name: airbyte-airbyte-env
          - name: JOB_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JOB_KUBE_SERVICEACCOUNT
            value: airbyte-admin
          - name: JOB_KUBE_CONNECTOR_IMAGE_REGISTRY
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_CONNECTOR_IMAGE_REGISTRY
                name: airbyte-airbyte-env
          - name: CONNECTOR_SIDECAR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_SIDECAR_IMAGE
                name: airbyte-airbyte-env
          - name: WORKLOAD_INIT_IMAGE
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_INIT_IMAGE
                name: airbyte-airbyte-env
          - name: CONNECTOR_PROFILER_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_PROFILER_IMAGE
                name: airbyte-airbyte-env
          - name: CONTAINER_ORCHESTRATOR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONTAINER_ORCHESTRATOR_IMAGE
                name: airbyte-airbyte-env
          - name: JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_KUBE_LOCAL_VOLUME_ENABLED
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_LOCAL_VOLUME_ENABLED
                name: airbyte-airbyte-env
          - name: KUBERNETES_CLIENT_MAX_IDLE_CONNECTIONS
            valueFrom:
              configMapKeyRef:
                key: KUBERNETES_CLIENT_MAX_IDLE_CONNECTIONS
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: WORKLOAD_API_BEARER_TOKEN_SECRET_NAME
            value: airbyte-airbyte-secrets
          - name: WORKLOAD_API_BEARER_TOKEN_SECRET_KEY
            value: WORKLOAD_API_BEARER_TOKEN
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_ATTEMPT
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_ATTEMPT
                name: airbyte-airbyte-env
          - name: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: SHOULD_RUN_NOTIFY_WORKFLOWS
            valueFrom:
              configMapKeyRef:
                key: SHOULD_RUN_NOTIFY_WORKFLOWS
                name: airbyte-airbyte-env
          - name: CONTROL_PLANE_TOKEN_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: CONTROL_PLANE_TOKEN_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATAPLANE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: dataplane-client-id
                name: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_ID_SECRET_NAME
            value: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_ID_SECRET_KEY
            value: dataplane-client-id
          - name: DATAPLANE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: dataplane-client-secret
                name: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_SECRET_SECRET_NAME
            value: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_SECRET_SECRET_KEY
            value: dataplane-client-secret
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: LAUNCHER_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: WORKLOAD_LAUNCHER_PARALLELISM
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_LAUNCHER_PARALLELISM
                name: airbyte-airbyte-env
          - name: FILE_TRANSFER_EPHEMERAL_STORAGE_LIMIT
            valueFrom:
              configMapKeyRef:
                key: FILE_TRANSFER_EPHEMERAL_STORAGE_LIMIT
                name: airbyte-airbyte-env
          - name: FILE_TRANSFER_EPHEMERAL_STORAGE_REQUEST
            valueFrom:
              configMapKeyRef:
                key: FILE_TRANSFER_EPHEMERAL_STORAGE_REQUEST
                name: airbyte-airbyte-env
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          image: airbyte/workload-launcher:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: airbyte-workload-launcher-container
          ports:
          - containerPort: 8016
            name: heartbeat
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      lastUpdateTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-workload-launcher-6d646d5466-" is forbidden: error looking
        up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not
        found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2025-05-23T13:18:34Z"
      lastUpdateTime: "2025-05-23T13:18:34Z"
      message: ReplicaSet "airbyte-workload-launcher-6d646d5466" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-applicationset-controller
    namespace: argocd
    resourceVersion: "660015"
    uid: 8e53d781-d03b-482f-8c46-091437bf22e3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-applicationset-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: applicationset-controller
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-applicationset-controller
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-applicationset-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-applicationset-controller
          - --metrics-addr=:8080
          - --probe-addr=:8081
          - --webhook-addr=:7000
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.annotations
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.labels
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.leader.election
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.policy.override
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.debug
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.dryrun
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.progressive.syncs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.tokenref.strict.mode
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.concurrent.reconciliations.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.requeue.after
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: applicationset-controller
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          - containerPort: 8081
            name: probe
            protocol: TCP
          - containerPort: 7000
            name: webhook
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-applicationset-controller
        serviceAccountName: argocd-applicationset-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:14Z"
      lastUpdateTime: "2025-05-23T13:08:18Z"
      message: ReplicaSet "argocd-applicationset-controller-5db49854f7" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:47Z"
      lastUpdateTime: "2025-05-26T00:36:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "660214"
    uid: e4545360-9e8a-4c50-a8b9-e1c89b6b0027
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: dex-server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-dex-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-dex-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - rundex
          command:
          - /shared/argocd-dex
          env:
          - name: ARGOCD_DEX_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: dexserver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          image: ghcr.io/dexidp/dex:v2.43.1
          imagePullPolicy: IfNotPresent
          name: dex-server
          ports:
          - containerPort: 5556
            name: http
            protocol: TCP
          - containerPort: 5557
            name: grpc
            protocol: TCP
          - containerPort: 5558
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
          - mountPath: /tls
            name: argocd-dex-server-tls
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - emptyDir: {}
          name: dexconfig
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:14Z"
      lastUpdateTime: "2025-05-23T13:08:38Z"
      message: ReplicaSet "argocd-dex-server-5b7b67d78c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:56Z"
      lastUpdateTime: "2025-05-26T00:36:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-notifications-controller
    namespace: argocd
    resourceVersion: "659973"
    uid: 2a52a09c-d803-46ef-ba23-a593bcd61588
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-notifications-controller
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: notifications-controller
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-notifications-controller
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-notifications-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-notifications
          - --metrics-port=9001
          - --namespace=argocd
          - --argocd-repo-server=argocd-repo-server:8081
          - --secret-name=argocd-notifications-secret
          env:
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.selfservice.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: notifications-controller
          ports:
          - containerPort: 9001
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          workingDir: /app
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-notifications-controller
        serviceAccountName: argocd-notifications-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:14Z"
      lastUpdateTime: "2025-05-23T13:08:16Z"
      message: ReplicaSet "argocd-notifications-controller-76b95bf4c5" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:47Z"
      lastUpdateTime: "2025-05-26T00:36:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-redis
    namespace: argocd
    resourceVersion: "660304"
    uid: d3d8ebcc-ce0f-4342-9143-41282e1280ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: redis
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-redis
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          - --requirepass $(REDIS_PASSWORD)
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          image: public.ecr.aws/docker/library/redis:7.2.8-alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /health
            name: health
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: argocd-redis-health-configmap
          name: health
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:14Z"
      lastUpdateTime: "2025-05-23T13:08:25Z"
      message: ReplicaSet "argocd-redis-58596c6f96" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:59Z"
      lastUpdateTime: "2025-05-26T00:36:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "660313"
    uid: 87c0f62c-b23e-4c5a-8543-a96d12e58124
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: repo-server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-repo-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-repo-server
          - --port=8081
          - --metrics-port=8084
          env:
          - name: ARGOCD_REPO_SERVER_NAME
            value: argocd-repo-server
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.repo.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-username
                name: argocd-redis
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
                optional: false
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-username
                name: argocd-redis
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-password
                name: argocd-redis
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.max.combined.directory.manifests.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.tar.exclusions
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.use.manifest.generate.paths
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
            valueFrom:
              configMapKeyRef:
                key: reposerver.allow.oob.symlinks
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.tar.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: reposerver.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.lsremote.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_REQUEST_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.request.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.revision.cache.lock.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
            valueFrom:
              configMapKeyRef:
                key: reposerver.include.hidden.directories
                name: argocd-cmd-params-cm
                optional: true
          - name: HELM_CACHE_HOME
            value: /helm-working-dir
          - name: HELM_CONFIG_HOME
            value: /helm-working-dir
          - name: HELM_DATA_HOME
            value: /helm-working-dir
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: repo-server
          ports:
          - containerPort: 8081
            name: repo-server
            protocol: TCP
          - containerPort: 8084
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /helm-working-dir
            name: helm-working-dir
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /var/run/argocd/argocd-cmp-server
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-repo-server
        serviceAccountName: argocd-repo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: helm-working-dir
        - emptyDir: {}
          name: plugins
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:15Z"
      lastUpdateTime: "2025-05-23T13:08:37Z"
      message: ReplicaSet "argocd-repo-server-bb6856cb7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:59Z"
      lastUpdateTime: "2025-05-26T00:36:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-server
    namespace: argocd
    resourceVersion: "660216"
    uid: 045b962b-956f-47e1-aa3b-eb32b89f466f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-server
          - --port=8080
          - --metrics-port=8083
          env:
          - name: ARGOCD_SERVER_NAME
            value: argocd-server
          - name: ARGOCD_SERVER_INSECURE
            valueFrom:
              configMapKeyRef:
                key: server.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_BASEHREF
            valueFrom:
              configMapKeyRef:
                key: server.basehref
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ROOTPATH
            valueFrom:
              configMapKeyRef:
                key: server.rootpath
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: server.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: server.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER
            valueFrom:
              configMapKeyRef:
                key: server.dex.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DISABLE_AUTH
            valueFrom:
              configMapKeyRef:
                key: server.disable.auth
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_GZIP
            valueFrom:
              configMapKeyRef:
                key: server.enable.gzip
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_X_FRAME_OPTIONS
            valueFrom:
              configMapKeyRef:
                key: server.x.frame.options
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
            valueFrom:
              configMapKeyRef:
                key: server.content.security.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: server.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.connection.status.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.oidc.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.login.attempts.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_STATIC_ASSETS
            valueFrom:
              configMapKeyRef:
                key: server.staticassets
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-username
                name: argocd-redis
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
                optional: false
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-username
                name: argocd-redis
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-password
                name: argocd-redis
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_MAX_COOKIE_NUMBER
            valueFrom:
              configMapKeyRef:
                key: server.http.cookie.maxnumber
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
            valueFrom:
              configMapKeyRef:
                key: server.enable.proxy.extension
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_API_CONTENT_TYPES
            valueFrom:
              configMapKeyRef:
                key: server.api.content.types
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: server.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
            valueFrom:
              configMapKeyRef:
                key: server.sync.replace.allowed
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: server
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            name: server
            protocol: TCP
          - containerPort: 8083
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: server
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
          - mountPath: /app/config/dex/tls
            name: argocd-dex-server-tls
          - mountPath: /home/argocd
            name: plugins-home
          - mountPath: /shared/app/custom
            name: styles
          - mountPath: /tmp
            name: tmp
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: plugins-home
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-styles-cm
            optional: true
          name: styles
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: server.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:14Z"
      lastUpdateTime: "2025-05-23T13:08:37Z"
      message: ReplicaSet "argocd-server-b448677b5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:56Z"
      lastUpdateTime: "2025-05-26T00:36:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"control-plane":"audit-controller","gatekeeper.sh/operation":"audit","gatekeeper.sh/system":"yes"},"name":"gatekeeper-audit","namespace":"gatekeeper-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"control-plane":"audit-controller","gatekeeper.sh/operation":"audit","gatekeeper.sh/system":"yes"}},"template":{"metadata":{"labels":{"control-plane":"audit-controller","gatekeeper.sh/operation":"audit","gatekeeper.sh/system":"yes"}},"spec":{"automountServiceAccountToken":true,"containers":[{"args":["--operation=audit","--operation=status","--operation=mutation-status","--operation=generate","--logtostderr","--disable-opa-builtin={http.send}","--disable-cert-rotation"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"CONTAINER_NAME","value":"manager"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)"}],"image":"openpolicyagent/gatekeeper:v3.19.1","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":9090}},"name":"manager","ports":[{"containerPort":8888,"name":"metrics","protocol":"TCP"},{"containerPort":9090,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":9090}},"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsGroup":999,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/certs","name":"cert","readOnly":true},{"mountPath":"/tmp/audit","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"gatekeeper-admin","terminationGracePeriodSeconds":60,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"gatekeeper-webhook-server-cert"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2025-05-23T15:32:33Z"
    generation: 1
    labels:
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
    name: gatekeeper-audit
    namespace: gatekeeper-system
    resourceVersion: "660290"
    uid: e181a805-8586-48ae-8351-f97e9264740c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        control-plane: audit-controller
        gatekeeper.sh/operation: audit
        gatekeeper.sh/system: "yes"
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          control-plane: audit-controller
          gatekeeper.sh/operation: audit
          gatekeeper.sh/system: "yes"
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --operation=audit
          - --operation=status
          - --operation=mutation-status
          - --operation=generate
          - --logtostderr
          - --disable-opa-builtin={http.send}
          - --disable-cert-rotation
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: manager
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
          image: openpolicyagent/gatekeeper:v3.19.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8888
            name: metrics
            protocol: TCP
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
          - mountPath: /tmp/audit
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gatekeeper-admin
        serviceAccountName: gatekeeper-admin
        terminationGracePeriodSeconds: 60
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: gatekeeper-webhook-server-cert
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T15:32:33Z"
      lastUpdateTime: "2025-05-23T15:33:20Z"
      message: ReplicaSet "gatekeeper-audit-78789fc48b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:58Z"
      lastUpdateTime: "2025-05-26T00:36:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"control-plane":"controller-manager","gatekeeper.sh/operation":"webhook","gatekeeper.sh/system":"yes"},"name":"gatekeeper-controller-manager","namespace":"gatekeeper-system"},"spec":{"replicas":3,"selector":{"matchLabels":{"control-plane":"controller-manager","gatekeeper.sh/operation":"webhook","gatekeeper.sh/system":"yes"}},"template":{"metadata":{"labels":{"control-plane":"controller-manager","gatekeeper.sh/operation":"webhook","gatekeeper.sh/system":"yes"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"gatekeeper.sh/operation","operator":"In","values":["webhook"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"automountServiceAccountToken":true,"containers":[{"args":["--port=8443","--logtostderr","--exempt-namespace=gatekeeper-system","--operation=webhook","--operation=mutation-webhook","--disable-opa-builtin={http.send}"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"CONTAINER_NAME","value":"manager"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)"}],"image":"openpolicyagent/gatekeeper:v3.19.1","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":9090}},"name":"manager","ports":[{"containerPort":8443,"name":"webhook-server","protocol":"TCP"},{"containerPort":8888,"name":"metrics","protocol":"TCP"},{"containerPort":9090,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":9090}},"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsGroup":999,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/certs","name":"cert","readOnly":true}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"gatekeeper-admin","terminationGracePeriodSeconds":60,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"gatekeeper-webhook-server-cert"}}]}}}}
    creationTimestamp: "2025-05-23T15:32:33Z"
    generation: 1
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
    name: gatekeeper-controller-manager
    namespace: gatekeeper-system
    resourceVersion: "660398"
    uid: 008396c8-86f1-49e4-a604-37dd6edddeb9
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        control-plane: controller-manager
        gatekeeper.sh/operation: webhook
        gatekeeper.sh/system: "yes"
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          control-plane: controller-manager
          gatekeeper.sh/operation: webhook
          gatekeeper.sh/system: "yes"
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: gatekeeper.sh/operation
                    operator: In
                    values:
                    - webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8443
          - --logtostderr
          - --exempt-namespace=gatekeeper-system
          - --operation=webhook
          - --operation=mutation-webhook
          - --disable-opa-builtin={http.send}
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: manager
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
          image: openpolicyagent/gatekeeper:v3.19.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8443
            name: webhook-server
            protocol: TCP
          - containerPort: 8888
            name: metrics
            protocol: TCP
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gatekeeper-admin
        serviceAccountName: gatekeeper-admin
        terminationGracePeriodSeconds: 60
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: gatekeeper-webhook-server-cert
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-05-23T15:32:33Z"
      lastUpdateTime: "2025-05-23T15:33:01Z"
      message: ReplicaSet "gatekeeper-controller-manager-d99dbf8dd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:37:01Z"
      lastUpdateTime: "2025-05-26T00:37:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: strimzi
      meta.helm.sh/release-namespace: kafka
    creationTimestamp: "2025-05-23T13:08:30Z"
    generation: 1
    labels:
      app: strimzi
      app.kubernetes.io/managed-by: Helm
      chart: strimzi-kafka-operator-0.46.0
      component: deployment
      heritage: Helm
      release: strimzi
    name: strimzi-cluster-operator
    namespace: kafka
    resourceVersion: "720905"
    uid: a9adf07b-91b3-4dea-a435-b9dbe64ab481
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: strimzi-cluster-operator
          strimzi.io/kind: cluster-operator
      spec:
        containers:
        - args:
          - /opt/strimzi/bin/cluster_operator_run.sh
          env:
          - name: STRIMZI_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_OPERATION_TIMEOUT_MS
            value: "300000"
          - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
            value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
            value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_CONNECT_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
            value: quay.io/strimzi/kafka-bridge:0.32.0
          - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
            value: quay.io/strimzi/kaniko-executor:0.46.0
          - name: STRIMZI_DEFAULT_MAVEN_BUILDER
            value: quay.io/strimzi/maven-builder:0.46.0
          - name: STRIMZI_OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_FEATURE_GATES
          - name: STRIMZI_LEADER_ELECTION_ENABLED
            value: "true"
          - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
            value: strimzi-cluster-operator
          - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/strimzi/operator:0.46.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: strimzi-cluster-operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 384Mi
            requests:
              cpu: 200m
              memory: 384Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-tmp
          - mountPath: /opt/strimzi/custom-config/
            name: co-config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: strimzi-cluster-operator
        serviceAccountName: strimzi-cluster-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 1Mi
          name: strimzi-tmp
        - configMap:
            defaultMode: 420
            name: strimzi-cluster-operator
          name: co-config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:30Z"
      lastUpdateTime: "2025-05-23T13:17:31Z"
      message: ReplicaSet "strimzi-cluster-operator-68fd5bf4f7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T05:18:03Z"
      lastUpdateTime: "2025-05-26T05:18:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-23T13:06:48Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "660300"
    uid: 38c32e44-749e-44c6-b86f-7851bd101f47
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-23T13:07:02Z"
      lastUpdateTime: "2025-05-23T13:07:08Z"
      message: ReplicaSet "coredns-5d78c9869d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:46Z"
      lastUpdateTime: "2025-05-26T00:36:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"local-path-provisioner","namespace":"local-path-storage"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"local-path-provisioner"}},"template":{"metadata":{"labels":{"app":"local-path-provisioner"}},"spec":{"containers":[{"command":["local-path-provisioner","--debug","start","--config","/etc/config/config.json"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_MOUNT_PATH","value":"/etc/config/"}],"image":"rancher/local-path-provisioner:v0.0.31","imagePullPolicy":"IfNotPresent","name":"local-path-provisioner","volumeMounts":[{"mountPath":"/etc/config/","name":"config-volume"}]}],"serviceAccountName":"local-path-provisioner-service-account","volumes":[{"configMap":{"name":"local-path-config"},"name":"config-volume"}]}}}}
    creationTimestamp: "2025-05-23T13:06:51Z"
    generation: 2
    name: local-path-provisioner
    namespace: local-path-storage
    resourceVersion: "660391"
    uid: 0fa748be-0340-4f0e-9c4f-6f24dd078972
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_MOUNT_PATH
            value: /etc/config/
          image: rancher/local-path-provisioner:v0.0.31
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-23T13:07:02Z"
      lastUpdateTime: "2025-05-23T13:19:19Z"
      message: ReplicaSet "local-path-provisioner-bc7974f65" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:37:01Z"
      lastUpdateTime: "2025-05-26T00:37:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: atlas:apps/Deployment:metadata/atlas
      deployment.kubernetes.io/revision: "6"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"atlas:apps/Deployment:metadata/atlas"},"labels":{"app":"atlas"},"name":"atlas","namespace":"metadata"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"atlas"}},"template":{"metadata":{"labels":{"app":"atlas"}},"spec":{"containers":[{"image":"sburn/apache-atlas:2.3.0","imagePullPolicy":"IfNotPresent","name":"atlas","ports":[{"containerPort":21000}]}]}}}}
    creationTimestamp: "2025-05-23T16:30:01Z"
    generation: 6849
    labels:
      app: atlas
    name: atlas
    namespace: metadata
    resourceVersion: "730142"
    uid: f4d65024-f6d6-4d47-9046-55a787a9cd7c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: atlas
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-24T17:41:21+05:30"
        creationTimestamp: null
        labels:
          app: atlas
      spec:
        containers:
        - image: sburn/apache-atlas:2.3.0
          imagePullPolicy: IfNotPresent
          name: atlas
          ports:
          - containerPort: 21000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-24T14:47:43Z"
      lastUpdateTime: "2025-05-24T14:47:46Z"
      message: ReplicaSet "atlas-747cd98f4c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-26T00:36:47Z"
      lastUpdateTime: "2025-05-26T00:36:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 6849
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: connector-builder-server
      pod-template-hash: 79989678bd
    name: airbyte-connector-builder-server-79989678bd
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-connector-builder-server
      uid: 8ed25736-cac9-433c-ad09-30cb5aee6403
    resourceVersion: "1090"
    uid: 40024f67-fc67-4f39-9790-2826e56d4cf5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: connector-builder-server
        pod-template-hash: 79989678bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: connector-builder-server
          pod-template-hash: 79989678bd
      spec:
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          image: airbyte/connector-builder-server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-connector-builder-server
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-connector-builder-server-79989678bd-" is forbidden:
        error looking up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin"
        not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: cron
      pod-template-hash: 6465dfb896
    name: airbyte-cron-6465dfb896
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-cron
      uid: e5852868-78e5-4015-85ec-549bff878a5b
    resourceVersion: "1091"
    uid: 7a7ad681-eea6-491d-9bc9-8edef570d811
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: cron
        pod-template-hash: 6465dfb896
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: cron
          pod-template-hash: 6465dfb896
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: CRON_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_DOCKER_MOUNT
                name: airbyte-airbyte-env
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/cron:1.6.2
          imagePullPolicy: IfNotPresent
          name: airbyte-cron
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-cron-6465dfb896-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: server
      pod-template-hash: 84fb8d6dd6
    name: airbyte-server-84fb8d6dd6
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-server
      uid: 5831c8e4-35fc-48ca-8f1b-db55b72b3c56
    resourceVersion: "1113"
    uid: 74960c7d-b623-4df0-90bc-2ac226a502cf
  spec:
    minReadySeconds: 30
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: server
        pod-template-hash: 84fb8d6dd6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: server
          pod-template-hash: 84fb8d6dd6
      spec:
        containers:
        - env:
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: AIRBYTE_URL
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_URL
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: SERVER_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKER_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                key: WORKER_ENVIRONMENT
                name: airbyte-airbyte-env
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: KEYCLOAK_INTERNAL_HOST
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_INTERNAL_HOST
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_SERVER_API_HOST
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_SERVER_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_AUTH_HEADER_NAME
            value: X-Airbyte-Auth
          - name: AIRBYTE_API_AUTH_HEADER_VALUE
            value: Internal server
          - name: ENTERPRISE_SOURCE_STUBS_URL
            valueFrom:
              configMapKeyRef:
                key: ENTERPRISE_SOURCE_STUBS_URL
                name: airbyte-airbyte-env
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-server-container
          ports:
          - containerPort: 8001
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-server-84fb8d6dd6-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: temporal
      pod-template-hash: 6cb79b7fc9
    name: airbyte-temporal-6cb79b7fc9
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-temporal
      uid: 113b9c87-6724-4f6d-bd37-42c7b22eafed
    resourceVersion: "1087"
    uid: 57ff2949-16b0-499f-a936-52130290eec6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: temporal
        pod-template-hash: 6cb79b7fc9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: temporal
          pod-template-hash: 6cb79b7fc9
      spec:
        containers:
        - env:
          - name: AUTO_SETUP
            value: "true"
          - name: DB
            value: postgres12
          - name: DYNAMIC_CONFIG_FILE_PATH
            value: config/dynamicconfig/development.yaml
          - name: POSTGRES_SEEDS
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: POSTGRES_PWD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          image: temporalio/auto-setup:1.26
          imagePullPolicy: IfNotPresent
          name: airbyte-temporal
          ports:
          - containerPort: 7233
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/temporal/config/dynamicconfig/
            name: airbyte-temporal-dynamicconfig
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: development.yaml
              path: development.yaml
            name: airbyte-temporal-dynamicconfig
          name: airbyte-temporal-dynamicconfig
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-temporal-6cb79b7fc9-" is forbidden: error looking up
        service account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not
        found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: webapp
      pod-template-hash: 85bcd86c88
    name: airbyte-webapp-85bcd86c88
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-webapp
      uid: 6a4c9fcd-e6d9-46ed-a851-78cc561bf3ca
    resourceVersion: "1089"
    uid: 74ebd4ce-9b86-4631-b80b-3e6cc9764787
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: webapp
        pod-template-hash: 85bcd86c88
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: webapp
          pod-template-hash: 85bcd86c88
      spec:
        containers:
        - env:
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: AIRBYTE_SERVER_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_SERVER_HOST
                name: airbyte-airbyte-env
          - name: KEYCLOAK_INTERNAL_HOST
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_INTERNAL_HOST
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_API_HOST
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: API_URL
            valueFrom:
              configMapKeyRef:
                key: API_URL
                name: airbyte-airbyte-env
          - name: CONNECTOR_BUILDER_API_URL
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_BUILDER_API_URL
                name: airbyte-airbyte-env
          image: airbyte/webapp:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          name: airbyte-webapp-container
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /index.html
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-webapp-85bcd86c88-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: worker
      pod-template-hash: 66775d8856
    name: airbyte-worker-66775d8856
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-worker
      uid: 4e985765-da7d-4143-ad77-03c658921b45
    resourceVersion: "1120"
    uid: 9444e5a7-bba5-48dd-b088-56e5fe1d7676
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: worker
        pod-template-hash: 66775d8856
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: worker
          pod-template-hash: 66775d8856
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            value: workspace
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_WORKER_PORTS
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_WORKER_PORTS
                name: airbyte-airbyte-env
          - name: JOB_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_ATTEMPT
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_ATTEMPT
                name: airbyte-airbyte-env
          - name: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: SHOULD_RUN_NOTIFY_WORKFLOWS
            valueFrom:
              configMapKeyRef:
                key: SHOULD_RUN_NOTIFY_WORKFLOWS
                name: airbyte-airbyte-env
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: WORKERS_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          - name: CONTAINER_ORCHESTRATOR_ENABLED
            value: "true"
          image: airbyte/worker:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: airbyte-worker-container
          ports:
          - containerPort: 9000
            name: heartbeat
            protocol: TCP
          - containerPort: 9001
            protocol: TCP
          - containerPort: 9002
            protocol: TCP
          - containerPort: 9003
            protocol: TCP
          - containerPort: 9004
            protocol: TCP
          - containerPort: 9005
            protocol: TCP
          - containerPort: 9006
            protocol: TCP
          - containerPort: 9007
            protocol: TCP
          - containerPort: 9008
            protocol: TCP
          - containerPort: 9009
            protocol: TCP
          - containerPort: 9010
            protocol: TCP
          - containerPort: 9011
            protocol: TCP
          - containerPort: 9012
            protocol: TCP
          - containerPort: 9013
            protocol: TCP
          - containerPort: 9014
            protocol: TCP
          - containerPort: 9015
            protocol: TCP
          - containerPort: 9016
            protocol: TCP
          - containerPort: 9017
            protocol: TCP
          - containerPort: 9018
            protocol: TCP
          - containerPort: 9019
            protocol: TCP
          - containerPort: 9020
            protocol: TCP
          - containerPort: 9021
            protocol: TCP
          - containerPort: 9022
            protocol: TCP
          - containerPort: 9023
            protocol: TCP
          - containerPort: 9024
            protocol: TCP
          - containerPort: 9025
            protocol: TCP
          - containerPort: 9026
            protocol: TCP
          - containerPort: 9027
            protocol: TCP
          - containerPort: 9028
            protocol: TCP
          - containerPort: 9029
            protocol: TCP
          - containerPort: 9030
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-worker-66775d8856-" is forbidden: error looking up service
        account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: workload-api-server
      pod-template-hash: 6b65676c9f
    name: airbyte-workload-api-server-6b65676c9f
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-workload-api-server
      uid: 5bfb3ae6-393f-4a2d-b10e-4d6b0f6f9192
    resourceVersion: "1085"
    uid: cb4bb0be-ee69-4f93-be96-70609971b504
  spec:
    minReadySeconds: 30
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: workload-api-server
        pod-template-hash: 6b65676c9f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: workload-api-server
          pod-template-hash: 6b65676c9f
      spec:
        containers:
        - env:
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: AIRBYTE_API_HOST
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_API_HOST
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: WORKERS_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: AB_JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-signature-secret
                name: airbyte-auth-secrets
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          image: airbyte/workload-api-server:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: airbyte-workload-api-server-container
          ports:
          - containerPort: 8007
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-workload-api-server-6b65676c9f-" is forbidden: error
        looking up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin"
        not found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airbyte
      meta.helm.sh/release-namespace: airbyte
    creationTimestamp: "2025-05-23T13:08:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: airbyte
      app.kubernetes.io/name: workload-launcher
      pod-template-hash: 6d646d5466
    name: airbyte-workload-launcher-6d646d5466
    namespace: airbyte
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: airbyte-workload-launcher
      uid: 8c42071c-9638-4895-bb38-6c7814014c5c
    resourceVersion: "1109"
    uid: de66e3ab-4680-40ea-a478-cc687b644e41
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: airbyte
        app.kubernetes.io/name: workload-launcher
        pod-template-hash: 6d646d5466
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: airbyte
          app.kubernetes.io/name: workload-launcher
          pod-template-hash: 6d646d5466
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: RUNNING_TTL_MINUTES
          - name: SUCCEEDED_TTL_MINUTES
            value: "10"
          - name: UNSUCCESSFUL_TTL_MINUTES
            value: "120"
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_VERSION
                name: airbyte-airbyte-env
          - name: AIRBYTE_EDITION
            valueFrom:
              configMapKeyRef:
                key: AIRBYTE_EDITION
                name: airbyte-airbyte-env
          - name: DATA_PLANE_ID
            value: local
          - name: PUB_SUB_ENABLED
            valueFrom:
              configMapKeyRef:
                key: PUB_SUB_ENABLED
                name: airbyte-airbyte-env
          - name: PUB_SUB_TOPIC_NAME
            valueFrom:
              configMapKeyRef:
                key: PUB_SUB_TOPIC_NAME
                name: airbyte-airbyte-env
          - name: CONFIG_ROOT
            valueFrom:
              configMapKeyRef:
                key: CONFIG_ROOT
                name: airbyte-airbyte-env
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                key: DATABASE_HOST
                name: airbyte-airbyte-env
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_PORT
                name: airbyte-airbyte-env
          - name: DATABASE_DB
            valueFrom:
              configMapKeyRef:
                key: DATABASE_DB
                name: airbyte-airbyte-env
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: airbyte-airbyte-secrets
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: airbyte-airbyte-secrets
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATABASE_URL
                name: airbyte-airbyte-env
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: LOG_LEVEL
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STEP
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STEP
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_OTLP_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_OTLP_ENABLED
                name: airbyte-airbyte-env
          - name: OTEL_COLLECTOR_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: OTEL_COLLECTOR_ENDPOINT
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_ENABLED
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_ENABLED
                name: airbyte-airbyte-env
          - name: MICROMETER_METRICS_STATSD_FLAVOR
            valueFrom:
              configMapKeyRef:
                key: MICROMETER_METRICS_STATSD_FLAVOR
                name: airbyte-airbyte-env
          - name: SEGMENT_WRITE_KEY
            valueFrom:
              configMapKeyRef:
                key: SEGMENT_WRITE_KEY
                name: airbyte-airbyte-env
          - name: STATSD_HOST
            valueFrom:
              configMapKeyRef:
                key: STATSD_HOST
                name: airbyte-airbyte-env
          - name: STATSD_PORT
            valueFrom:
              configMapKeyRef:
                key: STATSD_PORT
                name: airbyte-airbyte-env
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                key: TRACKING_STRATEGY
                name: airbyte-airbyte-env
          - name: WORKSPACE_DOCKER_MOUNT
            value: workspace
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                key: WORKSPACE_ROOT
                name: airbyte-airbyte-env
          - name: WEBAPP_URL
            valueFrom:
              configMapKeyRef:
                key: WEBAPP_URL
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_HOST
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_API_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_HOST
                name: airbyte-airbyte-env
          - name: TEMPORAL_WORKER_PORTS
            valueFrom:
              configMapKeyRef:
                key: TEMPORAL_WORKER_PORTS
                name: airbyte-airbyte-env
          - name: JOB_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JOB_KUBE_SERVICEACCOUNT
            value: airbyte-admin
          - name: JOB_KUBE_CONNECTOR_IMAGE_REGISTRY
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_CONNECTOR_IMAGE_REGISTRY
                name: airbyte-airbyte-env
          - name: CONNECTOR_SIDECAR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_SIDECAR_IMAGE
                name: airbyte-airbyte-env
          - name: WORKLOAD_INIT_IMAGE
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_INIT_IMAGE
                name: airbyte-airbyte-env
          - name: CONNECTOR_PROFILER_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONNECTOR_PROFILER_IMAGE
                name: airbyte-airbyte-env
          - name: CONTAINER_ORCHESTRATOR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: CONTAINER_ORCHESTRATOR_IMAGE
                name: airbyte-airbyte-env
          - name: JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_CPU_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
                name: airbyte-airbyte-env
          - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
                name: airbyte-airbyte-env
          - name: JOB_KUBE_LOCAL_VOLUME_ENABLED
            valueFrom:
              configMapKeyRef:
                key: JOB_KUBE_LOCAL_VOLUME_ENABLED
                name: airbyte-airbyte-env
          - name: KUBERNETES_CLIENT_MAX_IDLE_CONNECTIONS
            valueFrom:
              configMapKeyRef:
                key: KUBERNETES_CLIENT_MAX_IDLE_CONNECTIONS
                name: airbyte-airbyte-env
          - name: WORKLOAD_API_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                key: WORKLOAD_API_BEARER_TOKEN
                name: airbyte-airbyte-secrets
          - name: WORKLOAD_API_BEARER_TOKEN_SECRET_NAME
            value: airbyte-airbyte-secrets
          - name: WORKLOAD_API_BEARER_TOKEN_SECRET_KEY
            value: WORKLOAD_API_BEARER_TOKEN
          - name: INTERNAL_API_HOST
            valueFrom:
              configMapKeyRef:
                key: INTERNAL_API_HOST
                name: airbyte-airbyte-env
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_ATTEMPT
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_ATTEMPT
                name: airbyte-airbyte-env
          - name: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
            valueFrom:
              configMapKeyRef:
                key: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
                name: airbyte-airbyte-env
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
                name: airbyte-airbyte-env
          - name: SHOULD_RUN_NOTIFY_WORKFLOWS
            valueFrom:
              configMapKeyRef:
                key: SHOULD_RUN_NOTIFY_WORKFLOWS
                name: airbyte-airbyte-env
          - name: CONTROL_PLANE_TOKEN_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: CONTROL_PLANE_TOKEN_ENDPOINT
                name: airbyte-airbyte-env
          - name: DATAPLANE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: dataplane-client-id
                name: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_ID_SECRET_NAME
            value: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_ID_SECRET_KEY
            value: dataplane-client-id
          - name: DATAPLANE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: dataplane-client-secret
                name: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_SECRET_SECRET_NAME
            value: airbyte-auth-secrets
          - name: DATAPLANE_CLIENT_SECRET_SECRET_KEY
            value: dataplane-client-secret
          - name: MICRONAUT_ENVIRONMENTS
            valueFrom:
              configMapKeyRef:
                key: LAUNCHER_MICRONAUT_ENVIRONMENTS
                name: airbyte-airbyte-env
          - name: WORKLOAD_LAUNCHER_PARALLELISM
            valueFrom:
              configMapKeyRef:
                key: WORKLOAD_LAUNCHER_PARALLELISM
                name: airbyte-airbyte-env
          - name: FILE_TRANSFER_EPHEMERAL_STORAGE_LIMIT
            valueFrom:
              configMapKeyRef:
                key: FILE_TRANSFER_EPHEMERAL_STORAGE_LIMIT
                name: airbyte-airbyte-env
          - name: FILE_TRANSFER_EPHEMERAL_STORAGE_REQUEST
            valueFrom:
              configMapKeyRef:
                key: FILE_TRANSFER_EPHEMERAL_STORAGE_REQUEST
                name: airbyte-airbyte-env
          - name: SECRET_PERSISTENCE
          - name: S3_PATH_STYLE_ACCESS
            valueFrom:
              configMapKeyRef:
                key: S3_PATH_STYLE_ACCESS
                name: airbyte-airbyte-env
          - name: STORAGE_TYPE
            value: MINIO
          - name: STORAGE_BUCKET_ACTIVITY_PAYLOAD
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_ACTIVITY_PAYLOAD
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_LOG
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_LOG
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_STATE
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_STATE
                name: airbyte-airbyte-env
          - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
            valueFrom:
              configMapKeyRef:
                key: STORAGE_BUCKET_WORKLOAD_OUTPUT
                name: airbyte-airbyte-env
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: airbyte-airbyte-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: airbyte-airbyte-secrets
          - name: MINIO_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: MINIO_ENDPOINT
                name: airbyte-airbyte-env
          image: airbyte/workload-launcher:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: airbyte-workload-launcher-container
          ports:
          - containerPort: 8016
            name: heartbeat
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: heartbeat
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: airbyte-admin
        serviceAccountName: airbyte-admin
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-23T13:08:33Z"
      message: 'pods "airbyte-workload-launcher-6d646d5466-" is forbidden: error looking
        up service account airbyte/airbyte-admin: serviceaccount "airbyte-admin" not
        found'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 5db49854f7
    name: argocd-applicationset-controller-5db49854f7
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-applicationset-controller
      uid: 8e53d781-d03b-482f-8c46-091437bf22e3
    resourceVersion: "659996"
    uid: 5205681e-552a-4134-a365-6e95d56282b7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-applicationset-controller
        pod-template-hash: 5db49854f7
    template:
      metadata:
        annotations:
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: applicationset-controller
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-applicationset-controller
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: 5db49854f7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-applicationset-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-applicationset-controller
          - --metrics-addr=:8080
          - --probe-addr=:8081
          - --webhook-addr=:7000
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.annotations
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.labels
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.leader.election
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.policy.override
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.debug
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.dryrun
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.progressive.syncs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.tokenref.strict.mode
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.concurrent.reconciliations.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.requeue.after
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: applicationset-controller
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          - containerPort: 8081
            name: probe
            protocol: TCP
          - containerPort: 7000
            name: webhook
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-applicationset-controller
        serviceAccountName: argocd-applicationset-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 5b7b67d78c
    name: argocd-dex-server-5b7b67d78c
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: e4545360-9e8a-4c50-a8b9-e1c89b6b0027
    resourceVersion: "660210"
    uid: 7fdcb5f0-da33-4dbd-8000-b22d1f6274fa
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 5b7b67d78c
    template:
      metadata:
        annotations:
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: dex-server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-dex-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: 5b7b67d78c
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-dex-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - rundex
          command:
          - /shared/argocd-dex
          env:
          - name: ARGOCD_DEX_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: dexserver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          image: ghcr.io/dexidp/dex:v2.43.1
          imagePullPolicy: IfNotPresent
          name: dex-server
          ports:
          - containerPort: 5556
            name: http
            protocol: TCP
          - containerPort: 5557
            name: grpc
            protocol: TCP
          - containerPort: 5558
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
          - mountPath: /tls
            name: argocd-dex-server-tls
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - emptyDir: {}
          name: dexconfig
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 76b95bf4c5
    name: argocd-notifications-controller-76b95bf4c5
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-notifications-controller
      uid: 2a52a09c-d803-46ef-ba23-a593bcd61588
    resourceVersion: "659966"
    uid: 9b82f493-81c7-4eab-8877-5ec74e7b8723
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-notifications-controller
        pod-template-hash: 76b95bf4c5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: notifications-controller
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-notifications-controller
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: 76b95bf4c5
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-notifications-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-notifications
          - --metrics-port=9001
          - --namespace=argocd
          - --argocd-repo-server=argocd-repo-server:8081
          - --secret-name=argocd-notifications-secret
          env:
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.selfservice.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: notifications-controller
          ports:
          - containerPort: 9001
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          workingDir: /app
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-notifications-controller
        serviceAccountName: argocd-notifications-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: 58596c6f96
    name: argocd-redis-58596c6f96
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: d3d8ebcc-ce0f-4342-9143-41282e1280ed
    resourceVersion: "660301"
    uid: 4ad90a75-ea6e-4d67-bed3-4539598aa051
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 58596c6f96
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: redis
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-redis
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: 58596c6f96
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          - --requirepass $(REDIS_PASSWORD)
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          image: public.ecr.aws/docker/library/redis:7.2.8-alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /health
            name: health
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: argocd-redis-health-configmap
          name: health
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:15Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: bb6856cb7
    name: argocd-repo-server-bb6856cb7
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 87c0f62c-b23e-4c5a-8543-a96d12e58124
    resourceVersion: "660307"
    uid: b16414a3-afbb-4fc5-932d-c2e94b226531
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: bb6856cb7
    template:
      metadata:
        annotations:
          checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: repo-server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-repo-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: bb6856cb7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-repo-server
          - --port=8081
          - --metrics-port=8084
          env:
          - name: ARGOCD_REPO_SERVER_NAME
            value: argocd-repo-server
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.repo.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-username
                name: argocd-redis
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
                optional: false
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-username
                name: argocd-redis
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-password
                name: argocd-redis
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.max.combined.directory.manifests.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.tar.exclusions
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.use.manifest.generate.paths
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
            valueFrom:
              configMapKeyRef:
                key: reposerver.allow.oob.symlinks
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.tar.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: reposerver.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.lsremote.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_REQUEST_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.request.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.revision.cache.lock.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
            valueFrom:
              configMapKeyRef:
                key: reposerver.include.hidden.directories
                name: argocd-cmd-params-cm
                optional: true
          - name: HELM_CACHE_HOME
            value: /helm-working-dir
          - name: HELM_CONFIG_HOME
            value: /helm-working-dir
          - name: HELM_DATA_HOME
            value: /helm-working-dir
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: repo-server
          ports:
          - containerPort: 8081
            name: repo-server
            protocol: TCP
          - containerPort: 8084
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /helm-working-dir
            name: helm-working-dir
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /var/run/argocd/argocd-cmp-server
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-repo-server
        serviceAccountName: argocd-repo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: helm-working-dir
        - emptyDir: {}
          name: plugins
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
      pod-template-hash: b448677b5
    name: argocd-server-b448677b5
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 045b962b-956f-47e1-aa3b-eb32b89f466f
    resourceVersion: "660209"
    uid: 869cdbd7-6548-400f-b103-f5f6a5740abc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-server
        pod-template-hash: b448677b5
    template:
      metadata:
        annotations:
          checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-server
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
          pod-template-hash: b448677b5
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-server
          - --port=8080
          - --metrics-port=8083
          env:
          - name: ARGOCD_SERVER_NAME
            value: argocd-server
          - name: ARGOCD_SERVER_INSECURE
            valueFrom:
              configMapKeyRef:
                key: server.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_BASEHREF
            valueFrom:
              configMapKeyRef:
                key: server.basehref
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ROOTPATH
            valueFrom:
              configMapKeyRef:
                key: server.rootpath
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: server.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: server.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER
            valueFrom:
              configMapKeyRef:
                key: server.dex.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DISABLE_AUTH
            valueFrom:
              configMapKeyRef:
                key: server.disable.auth
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_GZIP
            valueFrom:
              configMapKeyRef:
                key: server.enable.gzip
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_X_FRAME_OPTIONS
            valueFrom:
              configMapKeyRef:
                key: server.x.frame.options
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
            valueFrom:
              configMapKeyRef:
                key: server.content.security.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: server.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.connection.status.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.oidc.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.login.attempts.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_STATIC_ASSETS
            valueFrom:
              configMapKeyRef:
                key: server.staticassets
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-username
                name: argocd-redis
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
                optional: false
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-username
                name: argocd-redis
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-password
                name: argocd-redis
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_MAX_COOKIE_NUMBER
            valueFrom:
              configMapKeyRef:
                key: server.http.cookie.maxnumber
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
            valueFrom:
              configMapKeyRef:
                key: server.enable.proxy.extension
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_API_CONTENT_TYPES
            valueFrom:
              configMapKeyRef:
                key: server.api.content.types
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: server.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
            valueFrom:
              configMapKeyRef:
                key: server.sync.replace.allowed
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: server
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            name: server
            protocol: TCP
          - containerPort: 8083
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: server
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
          - mountPath: /app/config/dex/tls
            name: argocd-dex-server-tls
          - mountPath: /home/argocd
            name: plugins-home
          - mountPath: /shared/app/custom
            name: styles
          - mountPath: /tmp
            name: tmp
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: plugins-home
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-styles-cm
            optional: true
          name: styles
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: server.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-23T15:32:33Z"
    generation: 1
    labels:
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
      pod-template-hash: 78789fc48b
    name: gatekeeper-audit-78789fc48b
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gatekeeper-audit
      uid: e181a805-8586-48ae-8351-f97e9264740c
    resourceVersion: "660288"
    uid: 945673c8-aabb-4f9b-98d0-4045600ec9a8
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: audit-controller
        gatekeeper.sh/operation: audit
        gatekeeper.sh/system: "yes"
        pod-template-hash: 78789fc48b
    template:
      metadata:
        creationTimestamp: null
        labels:
          control-plane: audit-controller
          gatekeeper.sh/operation: audit
          gatekeeper.sh/system: "yes"
          pod-template-hash: 78789fc48b
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --operation=audit
          - --operation=status
          - --operation=mutation-status
          - --operation=generate
          - --logtostderr
          - --disable-opa-builtin={http.send}
          - --disable-cert-rotation
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: manager
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
          image: openpolicyagent/gatekeeper:v3.19.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8888
            name: metrics
            protocol: TCP
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
          - mountPath: /tmp/audit
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gatekeeper-admin
        serviceAccountName: gatekeeper-admin
        terminationGracePeriodSeconds: 60
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: gatekeeper-webhook-server-cert
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-23T15:32:33Z"
    generation: 1
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
      pod-template-hash: d99dbf8dd
    name: gatekeeper-controller-manager-d99dbf8dd
    namespace: gatekeeper-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gatekeeper-controller-manager
      uid: 008396c8-86f1-49e4-a604-37dd6edddeb9
    resourceVersion: "660396"
    uid: ce3de65d-da74-4fee-adba-4aa426c4b166
  spec:
    replicas: 3
    selector:
      matchLabels:
        control-plane: controller-manager
        gatekeeper.sh/operation: webhook
        gatekeeper.sh/system: "yes"
        pod-template-hash: d99dbf8dd
    template:
      metadata:
        creationTimestamp: null
        labels:
          control-plane: controller-manager
          gatekeeper.sh/operation: webhook
          gatekeeper.sh/system: "yes"
          pod-template-hash: d99dbf8dd
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: gatekeeper.sh/operation
                    operator: In
                    values:
                    - webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8443
          - --logtostderr
          - --exempt-namespace=gatekeeper-system
          - --operation=webhook
          - --operation=mutation-webhook
          - --disable-opa-builtin={http.send}
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: manager
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
          image: openpolicyagent/gatekeeper:v3.19.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8443
            name: webhook-server
            protocol: TCP
          - containerPort: 8888
            name: metrics
            protocol: TCP
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gatekeeper-admin
        serviceAccountName: gatekeeper-admin
        terminationGracePeriodSeconds: 60
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: gatekeeper-webhook-server-cert
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: strimzi
      meta.helm.sh/release-namespace: kafka
    creationTimestamp: "2025-05-23T13:08:30Z"
    generation: 1
    labels:
      name: strimzi-cluster-operator
      pod-template-hash: 68fd5bf4f7
      strimzi.io/kind: cluster-operator
    name: strimzi-cluster-operator-68fd5bf4f7
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: strimzi-cluster-operator
      uid: a9adf07b-91b3-4dea-a435-b9dbe64ab481
    resourceVersion: "720904"
    uid: 18556039-c9ab-4d4f-b03d-d091effff67a
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: strimzi-cluster-operator
        pod-template-hash: 68fd5bf4f7
        strimzi.io/kind: cluster-operator
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: strimzi-cluster-operator
          pod-template-hash: 68fd5bf4f7
          strimzi.io/kind: cluster-operator
      spec:
        containers:
        - args:
          - /opt/strimzi/bin/cluster_operator_run.sh
          env:
          - name: STRIMZI_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_OPERATION_TIMEOUT_MS
            value: "300000"
          - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
            value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
            value: quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_CONNECT_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
            value: |
              3.9.0=quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
              4.0.0=quay.io/strimzi/kafka:0.46.0-kafka-4.0.0
          - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
            value: quay.io/strimzi/operator:0.46.0
          - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
            value: quay.io/strimzi/kafka-bridge:0.32.0
          - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
            value: quay.io/strimzi/kaniko-executor:0.46.0
          - name: STRIMZI_DEFAULT_MAVEN_BUILDER
            value: quay.io/strimzi/maven-builder:0.46.0
          - name: STRIMZI_OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_FEATURE_GATES
          - name: STRIMZI_LEADER_ELECTION_ENABLED
            value: "true"
          - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
            value: strimzi-cluster-operator
          - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STRIMZI_LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/strimzi/operator:0.46.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: strimzi-cluster-operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 384Mi
            requests:
              cpu: 200m
              memory: 384Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-tmp
          - mountPath: /opt/strimzi/custom-config/
            name: co-config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: strimzi-cluster-operator
        serviceAccountName: strimzi-cluster-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 1Mi
          name: strimzi-tmp
        - configMap:
            defaultMode: 420
            name: strimzi-cluster-operator
          name: co-config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-23T13:07:02Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5d78c9869d
    name: coredns-5d78c9869d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 38c32e44-749e-44c6-b86f-7851bd101f47
    resourceVersion: "660296"
    uid: 9bb8db9e-99a4-4e18-aa17-f87bd2658151
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 5d78c9869d
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 5d78c9869d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-23T13:07:02Z"
    generation: 2
    labels:
      app: local-path-provisioner
      pod-template-hash: 6bc4bddd6b
    name: local-path-provisioner-6bc4bddd6b
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 0fa748be-0340-4f0e-9c4f-6f24dd078972
    resourceVersion: "2956"
    uid: bf5283fc-0f14-4558-a943-9d21a69ccc10
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 6bc4bddd6b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 6bc4bddd6b
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --helper-image
          - docker.io/kindest/local-path-helper:v20230510-486859a6
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/kindest/local-path-provisioner:v20230511-dc714da8
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-05-23T13:18:04Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: bc7974f65
    name: local-path-provisioner-bc7974f65
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 0fa748be-0340-4f0e-9c4f-6f24dd078972
    resourceVersion: "660390"
    uid: dd63e7c7-dd63-43c7-8a5f-176811a0ef1e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: bc7974f65
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: bc7974f65
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_MOUNT_PATH
            value: /etc/config/
          image: rancher/local-path-provisioner:v0.0.31
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: atlas:apps/Deployment:metadata/atlas
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-05-24T12:02:04Z"
    generation: 3
    labels:
      app: atlas
      pod-template-hash: 57b6cb5d58
    name: atlas-57b6cb5d58
    namespace: metadata
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: atlas
      uid: f4d65024-f6d6-4d47-9046-55a787a9cd7c
    resourceVersion: "357753"
    uid: 74ba85b5-ebcb-498b-89b5-40cedee05ee6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: atlas
        pod-template-hash: 57b6cb5d58
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: atlas
          pod-template-hash: 57b6cb5d58
      spec:
        containers:
        - image: apache/atlas:2.3.0
          imagePullPolicy: IfNotPresent
          name: atlas
          ports:
          - containerPort: 21000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: atlas:apps/Deployment:metadata/atlas
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-05-24T14:47:43Z"
    generation: 2
    labels:
      app: atlas
      pod-template-hash: 747cd98f4c
    name: atlas-747cd98f4c
    namespace: metadata
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: atlas
      uid: f4d65024-f6d6-4d47-9046-55a787a9cd7c
    resourceVersion: "730139"
    uid: 0e88403f-e836-4f01-9362-3e6c7768c952
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: atlas
        pod-template-hash: 747cd98f4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-24T17:41:21+05:30"
        creationTimestamp: null
        labels:
          app: atlas
          pod-template-hash: 747cd98f4c
      spec:
        containers:
        - image: sburn/apache-atlas:2.3.0
          imagePullPolicy: IfNotPresent
          name: atlas
          ports:
          - containerPort: 21000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: atlas:apps/Deployment:metadata/atlas
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-05-24T12:11:21Z"
    generation: 2
    labels:
      app: atlas
      pod-template-hash: 85b8579876
    name: atlas-85b8579876
    namespace: metadata
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: atlas
      uid: f4d65024-f6d6-4d47-9046-55a787a9cd7c
    resourceVersion: "357807"
    uid: 1f0e668f-39d7-4785-8477-d8e888102d28
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: atlas
        pod-template-hash: 85b8579876
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-24T17:41:21+05:30"
        creationTimestamp: null
        labels:
          app: atlas
          pod-template-hash: 85b8579876
      spec:
        containers:
        - image: apache/atlas:2.3.0
          imagePullPolicy: IfNotPresent
          name: atlas
          ports:
          - containerPort: 21000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-05-23T13:08:14Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.0.3
      helm.sh/chart: argo-cd-8.0.9
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "660331"
    uid: ec322d16-89b0-434c-a247-4ec431e7a17b
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 5
    selector:
      matchLabels:
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        annotations:
          checksum/cm: 093986363f23f91cc4cf43c693aeb51d73c25da7cee3b9467b52da12ebaaf75f
          checksum/cmd-params: b2c03c462d669af0708dcadd27da73e7cfa63b4caee9b7b1ab2e1ea640539938
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: application-controller
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argocd-application-controller
          app.kubernetes.io/part-of: argocd
          app.kubernetes.io/version: v3.0.3
          helm.sh/chart: argo-cd-8.0.9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: true
        containers:
        - args:
          - /usr/local/bin/argocd-application-controller
          - --metrics-port=8082
          env:
          - name: ARGOCD_CONTROLLER_REPLICAS
            value: "1"
          - name: ARGOCD_APPLICATION_CONTROLLER_NAME
            value: argocd-application-controller
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_HARD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.hard.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_RECONCILIATION_JITTER
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation.jitter
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.error.grace.period.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS
            valueFrom:
              configMapKeyRef:
                key: controller.status.processors
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS
            valueFrom:
              configMapKeyRef:
                key: controller.operation.processors
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: controller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: controller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.metrics.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.factor
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.cap.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: controller.sync.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH
            valueFrom:
              configMapKeyRef:
                key: controller.resource.health.persist
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-username
                name: argocd-redis
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
                optional: false
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-username
                name: argocd-redis
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-sentinel-password
                name: argocd-redis
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CONTROLLER_SHARDING_ALGORITHM
            valueFrom:
              configMapKeyRef:
                key: controller.sharding.algorithm
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: controller.kubectl.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: controller.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: controller.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF
            valueFrom:
              configMapKeyRef:
                key: controller.diff.server.side
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: controller.ignore.normalizer.jq.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING
            valueFrom:
              configMapKeyRef:
                key: controller.cluster.cache.batch.events.processing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: controller.cluster.cache.events.processing.interval
                name: argocd-cmd-params-cm
                optional: true
          - name: KUBECACHEDIR
            value: /tmp/kubecache
          image: quay.io/argoproj/argocd:v3.0.3
          imagePullPolicy: IfNotPresent
          name: application-controller
          ports:
          - containerPort: 8082
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
          - mountPath: /home/argocd
            name: argocd-home
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
          - mountPath: /tmp
            name: argocd-application-controller-tmp
          workingDir: /home/argocd
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: argocd-home
        - emptyDir: {}
          name: argocd-application-controller-tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: controller.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-5fdc7df5d5
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-5fdc7df5d5
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 17.0.1-legacy
      helm.sh/chart: keycloak-18.10.0
    name: keycloak
    namespace: auth
    resourceVersion: "660358"
    uid: c0bb5b3f-fcf3-49aa-a365-79694a73afd9
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloak
    serviceName: keycloak-headless
    template:
      metadata:
        annotations:
          checksum/config-startup: f875cea0a33f040d43f2834887e6a2fd3661e284623b699c10262fa2d1148bcf
          checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/name: keycloak
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                    - test
                  matchLabels:
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: keycloak
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloak
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: DB_VENDOR
            value: postgres
          - name: DB_ADDR
            value: keycloak-postgresql
          - name: DB_PORT
            value: "5432"
          - name: DB_DATABASE
            value: keycloak
          - name: DB_USER
            value: keycloak
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: keycloak-postgresql
          image: quay.io/keycloak/keycloak:17.0.1-legacy
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /auth/
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: keycloak
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 9990
            name: http-management
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /auth/realms/master
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /auth/
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/jboss/startup-scripts/keycloak.cli
            name: startup
            readOnly: true
            subPath: keycloak.cli
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            echo 'Waiting for PostgreSQL to become ready...'

            until printf "." && nc -z -w 2 keycloak-postgresql 5432; do
                sleep 2;
            done;

            echo 'PostgreSQL OK ✓'
          image: docker.io/busybox:1.32
          imagePullPolicy: IfNotPresent
          name: pgchecker
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: keycloak
        serviceAccountName: keycloak
        terminationGracePeriodSeconds: 60
        volumes:
        - configMap:
            defaultMode: 365
            items:
            - key: keycloak.cli
              path: keycloak.cli
            name: keycloak-startup
          name: startup
    updateStrategy:
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-67f7c7dd6b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-67f7c7dd6b
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: auth
    creationTimestamp: "2025-05-23T13:08:18Z"
    generation: 1
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-10.16.2
    name: keycloak-postgresql
    namespace: auth
    resourceVersion: "660217"
    uid: ef3fc80a-3a65-4d2c-b1e1-e94b8ada1b49
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: postgresql
        role: primary
    serviceName: keycloak-postgresql-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: postgresql
          helm.sh/chart: postgresql-10.16.2
          role: primary
        name: keycloak-postgresql
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: postgresql
                namespaces:
                - auth
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-postgres-password
                name: keycloak-postgresql
          - name: POSTGRES_USER
            value: keycloak
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: keycloak-postgresql
          - name: POSTGRES_DB
            value: keycloak
          - name: POSTGRESQL_ENABLE_LDAP
            value: "no"
          - name: POSTGRESQL_ENABLE_TLS
            value: "no"
          - name: POSTGRESQL_LOG_HOSTNAME
            value: "false"
          - name: POSTGRESQL_LOG_CONNECTIONS
            value: "false"
          - name: POSTGRESQL_LOG_DISCONNECTIONS
            value: "false"
          - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            value: "off"
          - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            value: error
          - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            value: pgaudit
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p
                5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: keycloak-postgresql
          ports:
          - containerPort: 5432
            name: tcp-postgresql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /bitnami/postgresql
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: dshm
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-postgresql-6b67cfbbdb
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-postgresql-6b67cfbbdb
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: neo4j:apps/StatefulSet:metadata/neo4j
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"neo4j:apps/StatefulSet:metadata/neo4j"},"labels":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"neo4j","app.kubernetes.io/version":"5.26.6","helm.sh/chart":"neo4j-0.4.3"},"name":"neo4j","namespace":"metadata"},"spec":{"podManagementPolicy":"Parallel","replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/name":"neo4j"}},"serviceName":"neo4j","template":{"metadata":{"labels":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"neo4j","app.kubernetes.io/version":"5.26.6","helm.sh/chart":"neo4j-0.4.3"}},"spec":{"affinity":{"nodeAffinity":null,"podAffinity":null,"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"neo4j","app.kubernetes.io/instance":"neo4j","app.kubernetes.io/name":"neo4j"}},"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"automountServiceAccountToken":false,"containers":[{"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"NEO4J_BOLT_PORT_NUMBER","value":"7687"},{"name":"NEO4J_HTTP_PORT_NUMBER","value":"7474"},{"name":"NEO4J_HOST","value":"127.0.0.1"},{"name":"NEO4J_BOLT_ADVERTISED_PORT_NUMBER","value":"7687"},{"name":"NEO4J_HTTP_ADVERTISED_PORT_NUMBER","value":"7474"},{"name":"NEO4J_PASSWORD_FILE","value":"/opt/bitnami/neo4j/secrets/password"}],"envFrom":null,"image":"docker.io/bitnami/neo4j:5.26.6-debian-12-r0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":20,"initialDelaySeconds":10,"periodSeconds":5,"successThreshold":1,"tcpSocket":{"port":"bolt"},"timeoutSeconds":10},"name":"neo4j","ports":[{"containerPort":7687,"name":"bolt"},{"containerPort":7474,"name":"http"}],"readinessProbe":{"failureThreshold":20,"httpGet":{"path":"/","port":"http"},"initialDelaySeconds":10,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":10},"resources":{"limits":{"cpu":1,"memory":"1Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/bitnami/neo4j","name":"data"},{"mountPath":"/tmp","name":"empty-dir","subPath":"tmp-dir"},{"mountPath":"/opt/bitnami/neo4j/logs","name":"empty-dir","subPath":"app-logs-dir"},{"mountPath":"/opt/bitnami/neo4j/.home","name":"empty-dir","subPath":"app-home-dir"},{"mountPath":"/opt/bitnami/neo4j/plugins","name":"empty-dir","subPath":"app-plugins-dir"},{"mountPath":"/opt/bitnami/neo4j/conf","name":"empty-dir","subPath":"app-conf-dir"},{"mountPath":"/opt/bitnami/neo4j/run","name":"empty-dir","subPath":"app-run-dir"},{"mountPath":"/opt/bitnami/neo4j/secrets","name":"neo4j-secrets"}]}],"initContainers":null,"securityContext":{"fsGroup":1001,"fsGroupChangePolicy":"Always","supplementalGroups":[],"sysctls":[]},"serviceAccountName":"neo4j","volumes":[{"emptyDir":{},"name":"empty-dir"},{"name":"neo4j-secrets","projected":{"sources":[{"secret":{"name":"neo4j"}}]}},{"name":"data","persistentVolumeClaim":{"claimName":"neo4j"}}]}},"updateStrategy":{"type":"RollingUpdate"},"volumeClaimTemplates":[{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}}}}]}}
      meta.helm.sh/release-name: neo4j
      meta.helm.sh/release-namespace: metadata
    creationTimestamp: "2025-05-23T13:08:24Z"
    generation: 3
    labels:
      app.kubernetes.io/component: neo4j
      app.kubernetes.io/instance: neo4j
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: neo4j
      app.kubernetes.io/version: 5.26.6
      helm.sh/chart: neo4j-0.4.3
    name: neo4j
    namespace: metadata
    resourceVersion: "660314"
    uid: 2536d72a-43b3-4745-8a11-6cb5df99d618
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: neo4j
        app.kubernetes.io/instance: neo4j
        app.kubernetes.io/name: neo4j
    serviceName: neo4j
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: neo4j
          app.kubernetes.io/instance: neo4j
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: neo4j
          app.kubernetes.io/version: 5.26.6
          helm.sh/chart: neo4j-0.4.3
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: neo4j
                    app.kubernetes.io/instance: neo4j
                    app.kubernetes.io/name: neo4j
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NEO4J_BOLT_PORT_NUMBER
            value: "7687"
          - name: NEO4J_HTTP_PORT_NUMBER
            value: "7474"
          - name: NEO4J_HOST
            value: 127.0.0.1
          - name: NEO4J_BOLT_ADVERTISED_PORT_NUMBER
            value: "7687"
          - name: NEO4J_HTTP_ADVERTISED_PORT_NUMBER
            value: "7474"
          - name: NEO4J_PASSWORD_FILE
            value: /opt/bitnami/neo4j/secrets/password
          image: docker.io/bitnami/neo4j:5.26.6-debian-12-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 20
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: bolt
            timeoutSeconds: 10
          name: neo4j
          ports:
          - containerPort: 7687
            name: bolt
            protocol: TCP
          - containerPort: 7474
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/neo4j
            name: data
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/neo4j/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/neo4j/.home
            name: empty-dir
            subPath: app-home-dir
          - mountPath: /opt/bitnami/neo4j/plugins
            name: empty-dir
            subPath: app-plugins-dir
          - mountPath: /opt/bitnami/neo4j/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/neo4j/run
            name: empty-dir
            subPath: app-run-dir
          - mountPath: /opt/bitnami/neo4j/secrets
            name: neo4j-secrets
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: neo4j
        serviceAccountName: neo4j
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: neo4j-secrets
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: neo4j
        - name: data
          persistentVolumeClaim:
            claimName: neo4j
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: neo4j-5648784fb6
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updateRevision: neo4j-5648784fb6
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: minio
      meta.helm.sh/release-namespace: storage
    creationTimestamp: "2025-05-23T13:08:34Z"
    generation: 1
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-5.4.0
      heritage: Helm
      release: minio
    name: minio
    namespace: storage
    resourceVersion: "660385"
    uid: 33345c66-7f53-464c-a45d-d0e378d80466
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 16
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: minio
        release: minio
    serviceName: minio-svc
    template:
      metadata:
        annotations:
          checksum/config: d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7
          checksum/secrets: 4c754061f8547d62d4d63bcc03dfd4f3a762d248ad13e8372bdd6b7a590316c5
        creationTimestamp: null
        labels:
          app: minio
          release: minio
        name: minio
      spec:
        containers:
        - command:
          - /bin/sh
          - -ce
          - /usr/bin/docker-entrypoint.sh minio server http://minio-{0...15}.minio-svc.storage.svc/export
            -S /etc/minio/certs/ --address :9000 --console-address :9001
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                key: rootUser
                name: minio
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: rootPassword
                name: minio
          - name: MINIO_PROMETHEUS_AUTH_TYPE
            value: public
          image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
          imagePullPolicy: IfNotPresent
          name: minio
          ports:
          - containerPort: 9000
            name: http
            protocol: TCP
          - containerPort: 9001
            name: http-console
            protocol: TCP
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /export
            name: export
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: minio-sa
        serviceAccountName: minio-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: minio-user
          secret:
            defaultMode: 420
            secretName: minio
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: export
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 16
    collisionCount: 0
    currentReplicas: 16
    currentRevision: minio-9f8899d4
    observedGeneration: 1
    readyReplicas: 16
    replicas: 16
    updateRevision: minio-9f8899d4
    updatedReplicas: 16
kind: List
metadata:
  resourceVersion: ""
